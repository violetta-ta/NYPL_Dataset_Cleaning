[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE - ANTWERPEN -NY",
          "RED STAR LINE -ANTWERPEN NY",
          "RED STAR LINE -ANTWERPEN - NY",
          "RED STAR LINE -ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "Norddeutscher Lloyd Bremen",
          "NORDDEUTSCHER LLOYD - BREMEN",
          "NORDDEUTSCHER LLOYD BREMEN;",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD -BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "FIFTH AVENUE HOTEL",
          "(FIFTH AVENUE HOTEL)",
          "(FIFTH AVENUE HOTEL?)",
          "FIFTH AVENUE HOTEL (?)",
          "(FIFTH AVENUE HOTEL?}",
          "FIFTH AVENUE HOTEL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "DELMONICO'S",
          "DELMONICOS",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "[Restaurant name and/or location not given]",
          "[Restaurant Name And/Or Location Not Given]",
          "Restaurant name and/or location not given]",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "Hotel Imperial",
          "IMPERIAL HOTEL",
          "Imperial Hotel",
          "HOTEL IMPERIAL",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Hotel"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park",
          "Gramercy Park hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "HOTEL KNICKERBOCKER",
          "Hotel Knickerbocker",
          "HOTEL KNICKERBOCKER (?)",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Knickerbocker Hotel"
      },
      {
        "from": [
          "Waldorf-Astoria",
          "WALDORF-ASTORIA",
          "(WALDORF-ASTORIA?)",
          "(WALDORF-ASTORIA)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-Astoria"
      },
      {
        "from": [
          "BRISTOL HOTEL",
          "Hotel Bristol",
          "Bristol Hotel",
          "HOTEL BRISTOL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "Hotel Majestic",
          "HOTEL MAJESTIC",
          "(MAJESTIC HOTEL)",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAJESTIC HOTEL"
      },
      {
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL",
          "(?COLONIAL HOTEL?)",
          "(COLONIAL HOTEL)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLONIAL HOTEL"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAVOY HOTEL"
      },
      {
        "from": [
          "HOTEL JEFFERSON",
          "Hotel Jefferson",
          "JEFFERSON HOTEL",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jefferson Hotel"
      },
      {
        "from": [
          "DEL CORONADO HOTEL",
          "HOTEL DEL CORONADO",
          "Hotel Del Coronado",
          "Hotel del Coronado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEL CORONADO HOTEL"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "ST, DENIS HOTEL",
          "ST. DENIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL",
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MARIE ANTOINETTE HOTEL"
      },
      {
        "from": [
          "Childs",
          "CHILDS'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILDS'"
      },
      {
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL",
          "Hotel Metropole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METROPOLE HOTEL"
      },
      {
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD - BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "ALTA VISTA HOTEL",
          "(ALTA VISTA HOTEL)",
          "ALTA VISTA HOTEL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTA VISTA HOTEL"
      },
      {
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE",
          "Cie Gle TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "from": [
          "Laurel In The Pines",
          "LAUREL IN THE PINES",
          "Laurel in the Pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laurel In The Pines"
      },
      {
        "from": [
          "(ENGINEERS CLUB)",
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGINEERS' CLUB"
      },
      {
        "from": [
          "Hotel Manhattan",
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN HOTEL"
      },
      {
        "from": [
          "Paquebot \\Liberté\\\"\"",
          "Paquebot Liberte",
          "Paquebot \\Liberte\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot Liberte"
      },
      {
        "from": [
          "HAMBURG AMERIKA LINIE",
          "HAMBURG - AMERIKA LINIE",
          "HAMBURG- AMERIKA LINIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL",
          "Hotel Colorado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLORADO HOTEL"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "COSMOPOLITAN HOTEL",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Palace Hotel",
          "PALACE HOTEL",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "from": [
          "Sherry's",
          "SHERRY'S",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "Schwarzwalders Natur Weinhaus",
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "Schwarzwalder's Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "HOTEL CHAMBERLIN",
          "Hotel Chamberlin",
          "CHAMBERLIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMBERLIN HOTEL"
      },
      {
        "from": [
          "RED STAR LINE",
          "(RED STAR LINE)",
          "RED STAR LINE -"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE"
      },
      {
        "from": [
          "ST. REGIS HOTEL",
          "HOTEL ST. REGIS",
          "Hotel St. Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. REGIS HOTEL"
      },
      {
        "from": [
          "ST. CHARLES HOTEL",
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "Waldorf Astoria",
          "WALDORF ASTORIA",
          "WALDORF- ASTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "(MANHATTAN CLUB)",
          "Manhattan Club",
          "MANHATTAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Club"
      },
      {
        "from": [
          "Lafayette Hotel",
          "HOTEL LAFAYETTE",
          "Hotel Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lafayette Hotel"
      },
      {
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL",
          "Hotel Dennis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENNIS HOTEL"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchants' Club"
      },
      {
        "from": [
          "Union Club",
          "UNION CLUB",
          "(UNION CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT",
          "Hotel Claremont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLAREMONT HOTEL"
      },
      {
        "from": [
          "MERCHANTS' CLUB",
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANTS' CLUB"
      },
      {
        "from": [
          "CAFE BOULEVARD",
          "Café Boulevard",
          "Cafe Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL",
          "Hotel Champlain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMPLAIN HOTEL"
      },
      {
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR",
          "Windsor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL"
      },
      {
        "from": [
          "SHANLEY'S",
          "Shanley's",
          "SHANLEYS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHANLEY'S"
      },
      {
        "from": [
          "FRAUNCES' TAVERN",
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAUNCES' TAVERN"
      },
      {
        "from": [
          "HOTEL ST. GEORGE",
          "Hotel St. George",
          "ST. GEORGE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George"
      },
      {
        "from": [
          "GRAND HOTEL ROYAL",
          "Grand Hôtel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Grand Hotel"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel",
          "PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza Hotel"
      },
      {
        "from": [
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN MEDICAL EDITORS' ASSOCIATION"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "PONTCHARTRAIN HOTEL",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pontchartrain Hotel"
      },
      {
        "from": [
          "UNION LEAGUE CLUB",
          "Union League Club",
          "(UNION LEAGUE CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club"
      },
      {
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BALTIMORE HOTEL"
      },
      {
        "from": [
          "WESTMINSTER HOTEL",
          "HOTEL WESTMINSTER",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WESTMINSTER HOTEL"
      },
      {
        "from": [
          "ARLINGTON HOTEL",
          "ARLINGTON hOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARLINGTON HOTEL"
      },
      {
        "from": [
          "METROPOLITAN LIFE INSURANCE COMPANY",
          "Metropolitan Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Life Insurance Company"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA -S.S.KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE MARU"
      },
      {
        "from": [
          "WALDORF-ASTORIA HOTEL",
          "Waldorf-Astoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA HOTEL"
      },
      {
        "from": [
          "Auditorium Hotel",
          "AUDITORIUM HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"American Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "NEW YORK CLUB",
          "New York Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Club"
      },
      {
        "from": [
          "Herald Square Hotel",
          "HERALD SQUARE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Herald Square Hotel"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA -S.S.KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KASUGA"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SONOMA",
          "OCEANIC STEAMSHIP COMPANY _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SONOMA"
      },
      {
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [Railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Hotel Alexandria",
          "HOTEL ALEXANDRIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Alexandria"
      },
      {
        "from": [
          "THE GRIDIRON CLUB",
          "The Gridiron Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Gridiron Club"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "Hotel Europäischer Hof",
          "HOTEL EUROPAISCHER HOF"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL EUROPAISCHER HOF"
      },
      {
        "from": [
          "CHAMBER OF COMMERCE",
          "Chamber of Commerce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamber of Commerce"
      },
      {
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DE L'ANGE HOTEL"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "KING FREDERIK VIII",
          "(KING FREDERIK VIII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING FREDERIK VIII"
      },
      {
        "from": [
          "HOLLAND-AMERICA LINE",
          "Holland-America Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND-AMERICA LINE"
      },
      {
        "from": [
          "QUILL CLUB",
          "Quill Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quill Club"
      },
      {
        "from": [
          "Unknown",
          "unknown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "HOLLAND HOUSE",
          "Holland House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND HOUSE"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SIERRA",
          "OCEANIC STEAMSHIP CO.- SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SIERRA"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "from": [
          "(KING ALEXANDER OF SERVIA)",
          "KING ALEXANDER OF SERVIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING ALEXANDER OF SERVIA"
      },
      {
        "from": [
          "HOTEL ASSOCIATION OF NEW YORK CITY",
          "(HOTEL ASSOCIATION OF NEW YORK CITY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASSOCIATION OF NEW YORK CITY"
      },
      {
        "from": [
          "COMPAGNIE GENERALE TRANSATLANTIQUE",
          "Compagnie Générale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPAGNIE GENERALE TRANSATLANTIQUE"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA",
          "OCEANIC STEAMSHIP CO. S.S.ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA"
      },
      {
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Healy's Forty-second Street restaurant"
      },
      {
        "from": [
          "REPUBLICAN CLUB OF THE CITY OF NEW YORK",
          "Republican Club of the City of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Republican Club of the City of New York"
      },
      {
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "VICTORY HOTEL"
      },
      {
        "from": [
          "(CLUB)",
          "? CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Some club"
      },
      {
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRUNEWALD HOTEL"
      },
      {
        "from": [
          "HOTEL ALGAZAR",
          "ALGAZAR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALGAZAR HOTEL"
      },
      {
        "from": [
          "GRAND HOTEL CENTRAL",
          "Grand Hotel Central"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel Central"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Louis Sherry",
          "LOUIS SHERRY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louis Sherry"
      },
      {
        "from": [
          "ALCAZAR HOTEL",
          "HOTEL ALCAZAR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALCAZAR HOTEL"
      },
      {
        "from": [
          "LOTOS CLUB",
          "Lotos Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lotos Club"
      },
      {
        "from": [
          "CAFE SAVARIN",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE SAVARIN"
      },
      {
        "from": [
          "ST. NICHOLAS HOTEL",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "from": [
          "CHATEAU FRONTENAC",
          "Chateau Frontenac"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chateau Frontenac"
      },
      {
        "from": [
          "CASINO CENTRAL PARK",
          "Casino Central Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Casino Central Park"
      },
      {
        "from": [
          "TOURO CLUB",
          "Touro Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Touro Club"
      },
      {
        "from": [
          "COLOMBO HOTEL",
          "HOTEL COLOMBO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLOMBO HOTEL"
      },
      {
        "from": [
          "(MAHARAJA OF BARODA)",
          "MAHARAJA OF BARODA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAHARAJA OF BARODA"
      },
      {
        "from": [
          "GRAND HOTEL HUNGARIA",
          "Grand Hotel Hungaria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel Hungaria"
      },
      {
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Crépe"
      },
      {
        "from": [
          "R.H. MACY & CO.",
          "R.H. Macy & Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.H. Macy & Co."
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY - S.S.ZEALANDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirates' House"
      },
      {
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANTS' CLUB OF BOSTON"
      },
      {
        "from": [
          "NORTHERN PACIFIC RAILWAY",
          "Northern Pacific Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northern Pacific Railway"
      },
      {
        "from": [
          "PARK AVENUE HOTEL",
          "Park Avenue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Avenue Hotel"
      },
      {
        "from": [
          "HOTEL WASHINGTON",
          "Hotel Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Washington"
      },
      {
        "from": [
          "SHERMAN SQUARE HOTEL",
          "Sherman Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherman Square Hotel"
      },
      {
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECOND PANEL SHERIFF'S JURY"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks' Club House"
      },
      {
        "from": [
          "Masonic Temple",
          "MASONIC TEMPLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Temple"
      },
      {
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DU MUSEE"
      },
      {
        "from": [
          "Astor House",
          "ASTOR HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor House"
      },
      {
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S.WESTERNLAND"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tavern On The Green"
      },
      {
        "from": [
          "Congress Hotel",
          "CONGRESS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Congress Hotel"
      },
      {
        "from": [
          "HOTEL MINOT",
          "MINOT HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MINOT HOTEL"
      },
      {
        "from": [
          "MURRAY HILL HOTEL",
          "Murray Hill Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel"
      },
      {
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Lane"
      },
      {
        "from": [
          "[Restaurant And/Or Location Not Given.]",
          "[Restaurant And/Or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. New Amsterdam"
      },
      {
        "from": [
          "JOHN WANAMAKER",
          "John Wanamaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "John Wanamaker"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "(PRIVATE)",
          "PRIVATE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "WORTHY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WORTHY HOTEL"
      },
      {
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WILLARD'S HOTEL"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO.- S.S.ATHABASCA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA"
      },
      {
        "from": [
          "CENTURY CLUB",
          "(CENTURY CLUB?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CENTURY CLUB"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel"
      },
      {
        "from": [
          "THE ANNEX",
          "The Annex"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Annex"
      },
      {
        "from": [
          "(EMPEROR NICHOLAS II",
          "EMPEROR NICHOLAS II"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPEROR NICHOLAS II"
      },
      {
        "from": [
          "Eastern Hotel",
          "EASTERN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eastern Hotel"
      },
      {
        "from": [
          "Hotel Somerset",
          "HOTEL SOMERSET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Somerset"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers' Hall"
      },
      {
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CONTINENTAL HOTEL"
      },
      {
        "from": [
          "THE WINDSOR",
          "The Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Windsor"
      },
      {
        "from": [
          "LACKAWANNA RAILROAD",
          "Lackawanna Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lackawanna Railroad"
      },
      {
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Lunch Co."
      },
      {
        "from": [
          "CARLTON CLUB",
          "Carlton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carlton Club"
      },
      {
        "from": [
          "New York Central System",
          "[New York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.",
          "(NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE."
      },
      {
        "from": [
          "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION",
          "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "KING EDWARD VII",
          "(KING EDWARD VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING EDWARD VII"
      },
      {
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NETHERLAND HOTEL"
      },
      {
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.REGIS HOTEL"
      },
      {
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "from": [
          "New York Athletic Club",
          "NEW YORK ATHLETIC CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "YALE UNIVERSITY",
          "Yale University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Yale University"
      },
      {
        "from": [
          "THE GOLDEN PHEASANT",
          "The Golden Pheasant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Golden Pheasant"
      },
      {
        "from": [
          "Don The Beachcomber",
          "Don the Beachcomber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Don The Beachcomber"
      },
      {
        "from": [
          "HOTEL EMPIRE",
          "EMPIRE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPIRE HOTEL"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot \\France\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot France"
      },
      {
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL PALM HOTEL"
      },
      {
        "from": [
          "HOTEL LINCOLN",
          "Hotel Lincoln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LINCOLN"
      },
      {
        "from": [
          "(ENGLISH HOTEL RESTAURANT)",
          "ENGLISH HOTEL RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH HOTEL RESTAURANT"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.(?)",
          "RG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RG"
      },
      {
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBIA HOTEL"
      },
      {
        "from": [
          "Brooklyn Club",
          "BROOKLYN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn Club"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel DuPont"
      },
      {
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW GRAND HOTEL"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza Hotel"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH",
          "Hotel Marlborough"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough"
      },
      {
        "from": [
          "Cafe de Paris",
          "Café de Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe de Paris"
      },
      {
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLUB XIII"
      },
      {
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "COMMERCIAL CLUB",
          "Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club"
      },
      {
        "from": [
          "PALACE HOTEL RESTAURANT",
          "Palace Hotel Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "Lüchow's Restaurant",
          "Luchow's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luchow's Restaurant"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pennsylvania"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"Parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "The Oriental",
          "THE ORIENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Oriental"
      },
      {
        "from": [
          "Great Northern Railway",
          "GREAT NORTHERN RAILWAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "Café Lafayette",
          "CAFE LAFAYETTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE LAFAYETTE"
      },
      {
        "from": [
          "THE LINCOLN CLUB",
          "The Lincoln Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lincoln Club"
      },
      {
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MOUQUIN RESTAURANT AND WINE CO."
      },
      {
        "from": [
          "Imperial",
          "IMPERIAL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "NEW YORK YACHT CLUB",
          "New York Yacht Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Yacht Club"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"Minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commodore Hotel"
      },
      {
        "from": [
          "THE ALDINE CLUB",
          "The Aldine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Aldine Club"
      },
      {
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. ST. LOUIS"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Winthrop Hotel"
      },
      {
        "from": [
          "South Ferry Hotel",
          "SOUTH FERRY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOUTH FERRY HOTEL"
      },
      {
        "from": [
          "Meyer's Hotel",
          "MEYERS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "HOTEL SCHENLEY",
          "Hotel Schenley"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Schenley"
      },
      {
        "from": [
          "(238 EIGHT AVENUE)",
          "238 EIGHT AVENUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "238 EIGHT AVENUE"
      },
      {
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHONIX HOTEL"
      },
      {
        "from": [
          "Harvard Club",
          "(HARVARD CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harvard Club"
      },
      {
        "from": [
          "Aldine Club",
          "ALDINE CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "Hotel St. Andrew",
          "HOTEL ST. ANDREW"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Andrew"
      },
      {
        "from": [
          "Ye Olde Dutch Tavern",
          "YE OLDE DUTCH TAVERN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ye Olde Dutch Tavern"
      },
      {
        "from": [
          "MAPLEWOOD HOTEL",
          "Maplewood Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maplewood Hotel"
      },
      {
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELLS"
      },
      {
        "from": [
          "Hotel d'Angleterre",
          "D'ANGLETERRE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "D'ANGLETERRE HOTEL"
      },
      {
        "from": [
          "ELLICOTT CLUB",
          "Ellicott Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club"
      },
      {
        "from": [
          "R.M.S. \"Queen Mary\"\"\"",
          "R.M.S. \\Queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Queen Mary"
      },
      {
        "from": [
          "AMERICAN LEGATION",
          "(AMERICAN LEGATION)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN LEGATION"
      },
      {
        "from": [
          "PLANTERS HOTEL",
          "Planters Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PLANTERS HOTEL"
      },
      {
        "from": [
          "RESTAURANT WALTERSPIEL",
          "Restaurant Walterspiel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Walterspiel"
      },
      {
        "from": [
          "Sphinx Club",
          "SPHINX CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "The Plaza",
          "THE PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "BROADWAY CENTRAL HOTEL",
          "Broadway Central Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway Central Hotel"
      },
      {
        "from": [
          "NEW YORK PRESS CLUB",
          "New York Press Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Press Club"
      },
      {
        "from": [
          "DENNETT'S",
          "Dennett's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dennett's"
      },
      {
        "from": [
          "R.M.S. \\Mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Mauretania"
      },
      {
        "from": [
          "QUEEN'S HOTEL",
          "Queen's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen's Hotel"
      },
      {
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MetLife Building"
      },
      {
        "from": [
          "UNION SQUARE HOTEL",
          "Union Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square Hotel"
      },
      {
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Frederik VIII"
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza Ballroom"
      },
      {
        "from": [
          "Metropolitan Club",
          "METROPOLITAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "MENZIES HOTEL",
          "MENZIE'S HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENZIE'S HOTEL"
      },
      {
        "from": [
          "University Club",
          "UNIVERSITY CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN BANKERS' ASSOCIATION"
      },
      {
        "from": [
          "(KING UMBERTO)",
          "KING UMBERTO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING UMBERTO"
      },
      {
        "from": [
          "KING HAAKON VII",
          "(KING HAAKON VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING HAAKON VII"
      },
      {
        "from": [
          "Hotel Del Monte",
          "HOTEL DEL MONTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Monte"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "RESTAURANT BREVOORT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brevoort Restaurant"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Promenade"
      },
      {
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "WALTON'S OLD HOMESTEAD OYSTER AND CHOP HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC STEAMSHIP COMPANY -SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "from": [
          "S.S. \"Ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Ile De France"
      },
      {
        "from": [
          "MASTER PRINTERS ASSOCIATION",
          "MASTER PRINTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MASTER PRINTERS' ASSOCIATION"
      },
      {
        "from": [
          "Wärdshuset Stallmästaregarden",
          "Wärdshuset Stallmästaregården"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wärdshuset Stallmästaregarden"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Mayan"
      },
      {
        "from": [
          "El Morocco",
          "el Morocco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Morocco"
      },
      {
        "from": [
          "REVERE HOUSE",
          "Revere House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revere House"
      },
      {
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRENOBLE HOTEL"
      },
      {
        "from": [
          "\\The Manor\\\"\"",
          "The Manor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Manor"
      },
      {
        "from": [
          "PENN. RR - PULLMAN DINING CAR SERVICE",
          "PENN RR - PULLMAN DINING CAR SERVICE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN. RR - PULLMAN DINING CAR SERVICE"
      },
      {
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SANTA FE ROUTE"
      },
      {
        "from": [
          "(HARVARD UNIVERSITY)",
          "HARVARD UNIVERSITY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HARVARD UNIVERSITY"
      },
      {
        "from": [
          "ALPHA KAPPA KAPPA",
          "KAPPA ALPHA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KAPPA ALPHA"
      },
      {
        "from": [
          "La Canzone Del Mare",
          "La Canzone del Mare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Canzone Del Mare"
      },
      {
        "from": [
          "Fred Harvey",
          "FRED HARVEY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fred Harvey"
      },
      {
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Mouquin Restaurant and Wine Co."
      },
      {
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA -HONG KONG MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL HOTEL"
      },
      {
        "from": [
          "ARION",
          "Arion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arion"
      },
      {
        "from": [
          "Parker House",
          "PARKER HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House"
      },
      {
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUISISANA HOTEL"
      },
      {
        "from": [
          "(FIFTH AVE. HOTEL)",
          "FIFTH AVE. HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH AVE. HOTEL"
      },
      {
        "from": [
          "Maxim's",
          "MAXIM'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maxim's"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "SMITHVILLE INN",
          "Smithville Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smithville Inn"
      },
      {
        "from": [
          "BROWN PALACE HOTEL",
          "Brown Palace Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brown Palace Hotel"
      },
      {
        "from": [
          "OLD GUARD ALBANY ZOUAVE CADETS",
          "ALBANY ZOUAVE CADETS - OLD GUARD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OLD GUARD ALBANY ZOUAVE CADETS"
      },
      {
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN REMO HOTEL"
      },
      {
        "from": [
          "CRAWFORD HOUSE",
          "Crawford House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRAWFORD HOUSE"
      },
      {
        "from": [
          "Rathskeller",
          "RATHSKELLER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rathskeller"
      },
      {
        "from": [
          "RECTOR'S",
          "Rector's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rector's"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "BANKERS' CLUB OF CHICAGO",
          "BANKERS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANKERS' CLUB OF CHICAGO"
      },
      {
        "from": [
          "GRAND HOTEL",
          "Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel"
      },
      {
        "from": [
          "MACY'S",
          "Macy's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macy's"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA -S.S.NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "from": [
          "(KING CHRISTIAN IX OF DENMARK)",
          "KING CHRISTIAN IX OF DENMARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING CHRISTIAN IX OF DENMARK"
      },
      {
        "from": [
          "UNITED STATES HOTEL",
          "United States Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United States Hotel"
      },
      {
        "from": [
          "Oustau De Baumaniere",
          "Oustau de Baumaniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oustau De Baumaniere"
      },
      {
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA - LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFETERIA LUNCH"
      },
      {
        "from": [
          "Hotel Ritz",
          "HOTEL RITZ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ritz"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Cafe Chambord"
      },
      {
        "from": [
          "PINE FOREST INN",
          "Pine Forest Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pine Forest Inn"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SONOMA",
          "OCEANIC STEAMSHIP CO. _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SONOMA"
      },
      {
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "from": [
          "MANSION HOUSE",
          "Mansion House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mansion House"
      },
      {
        "from": [
          "COTILLION CLUB",
          "Cotillion Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cotillion Club"
      },
      {
        "from": [
          "CORTELYOU CLUB",
          "Cortelyou Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cortelyou Club"
      },
      {
        "from": [
          "The Washington",
          "THE WASHINGTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Washington"
      },
      {
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YORK HOTEL"
      },
      {
        "from": [
          "THE PORTLAND",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Portland"
      },
      {
        "from": [
          "Hotel Royal",
          "ROYAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "VENDOME HOTEL"
      },
      {
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "from": [
          "US ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY - SUBSISTENCE DEPT."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "US ARMY - SUBSISTENCE DEPT."
      },
      {
        "from": [
          "Red Coach Grill",
          "RED COACH GRILL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Coach Grill"
      },
      {
        "from": [
          "Hotel Martinique",
          "MARTINIQUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "BUFFALO CLUB",
          "Buffalo Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo Club"
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Hotel Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-Plaza Hotel"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA -S.S.KINSHIN MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Victoria Hotel"
      },
      {
        "from": [
          "PONCE DE LEON HOTEL",
          "HOTEL PONCE DE LEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PONCE DE LEON HOTEL"
      },
      {
        "from": [
          "Plaza",
          "PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza"
      },
      {
        "from": [
          "(AMERICAN LINE)",
          "American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Line"
      },
      {
        "from": [
          "The Maplewood",
          "THE MAPLEWOOD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Maplewood"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lexington Hotel"
      },
      {
        "from": [
          "HOTEL REVELSTOKE",
          "REVELSTOKE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REVELSTOKE HOTEL"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA -SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "from": [
          "QUEEN CITY CLUB",
          "Queen City Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club"
      },
      {
        "from": [
          "HOTEL ROANOKE",
          "ROANOKE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROANOKE HOTEL"
      },
      {
        "from": [
          "Pennsylvania Railroad",
          "PENNSYLVANIA RAILROAD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad"
      },
      {
        "from": [
          "DES INDES HOTEL",
          "Hotel des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DES INDES HOTEL"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Statler Hotel"
      },
      {
        "from": [
          "PROFILE HOUSE AND HOTEL VENDOME",
          "HOTEL VENDOME AND PROFILE HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROFILE HOUSE AND HOTEL VENDOME"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "CRESCENT ATHLETIC CLUB",
          "Crescent Athletic Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crescent Athletic Club"
      },
      {
        "from": [
          "The Lotos Club",
          "THE LOTOS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GALLATIN HOTEL"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "BOHEMIAN CLUB",
          "Bohemian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bohemian Club"
      },
      {
        "from": [
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
      },
      {
        "from": [
          "HARVARD CLUB OF NEW YORK CITY",
          "Harvard Club Of New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harvard Club Of New York City"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "HAMBURG-AMERICA LINIE",
          "HAMBURG-AMERIKA LINE",
          "HAMBURG-AMERICAN LINE",
          "HAMBURG-AMERICA LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG-AMERICA LINE"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTCHER LLOYD BREMEN",
          "NORDDEUTECHER LLOYD BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "COMPAGNIE GENERAL TRANSATLANTIQUE",
          "COMPAGNIE GENERALE TRANSATLANTIQUE",
          "COMPNGNIE GENERAL TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPAGNIE GENERALE TRANSATLANTIQUE"
      },
      {
        "from": [
          "SMITH & MC NELL",
          "SMITH & MC NELLS",
          "SMITH & McNELL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MC NELLS"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYDS BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE",
          "FLAT IRON RESTAURANT AND CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT AND CAFE"
      },
      {
        "from": [
          "DEL CORONADO HOTEL",
          "DEL CORONADA HOTEL",
          "DEL CORONADAO HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEL CORONADO HOTEL"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-Astoria",
          "The Walforf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA - S.S. KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KOBE MARU"
      },
      {
        "from": [
          "NEW YORK LIFE INSUANCE COMPANY",
          "NEW YORK LIFE INSURANCE COMPANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK LIFE INSURANCE COMPANY"
      },
      {
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA - S.S.NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "from": [
          "DENVAR BAR ASSOCIATION",
          "DENVER BAR ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENVER BAR ASSOCIATION"
      },
      {
        "from": [
          "Wiehl & Widmann",
          "Wiehl & Widman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wiehl & Widmann"
      },
      {
        "from": [
          "COLONNADE RESTAURANT",
          "Colonade Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonade Restaurant"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTECHER LLOYD BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "Hotel DuPont",
          "Hotel Du Pont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel DuPont"
      },
      {
        "from": [
          "Sphinx Club",
          "SPHNX CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "NEW YORK SOUTHERN SOCIETY",
          "NEW YORK SOUTHEN SOCIETY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK SOUTHERN SOCIETY"
      },
      {
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzzwalder's Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "KING UMBERTO AND QUEEN MARGHARITA",
          "KING UMBERTO AND QUEEN MARGHERITA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING UMBERTO AND QUEEN MARGHARITA"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC SREAMSHIP COMPANY - SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "from": [
          "GRISWOLD HOUSE",
          "GRISWALD HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRISWALD HOUSE"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Airlines"
      },
      {
        "from": [
          "Park Avenue Hotel",
          "PARK AVEBUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Avenue Hotel"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY OF PENNSYLVANIA",
          "NEW ENGLAND SOCIETY OF PENNSYLVNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY OF PENNSYLVANIA"
      },
      {
        "from": [
          "The Cortland",
          "The Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "DOBBELTSKRUE POSTDAMPSKIBET",
          "DOBBELSKRUE POSTDAMPSKIBET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DOBBELTSKRUE POSTDAMPSKIBET"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel LaSalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel LaSalle"
      },
      {
        "from": [
          "S.S. Nieuw Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Niew Amsterdam"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. President Wilson"
      },
      {
        "from": [
          "CERCLE FRANCAID DE L'HARMONIE",
          "CERCLE FRANCAIS DE L'HARMONIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CERCLE FRANCAIS DE L'HARMONIE"
      },
      {
        "from": [
          "RIGGS HOUSE",
          "BRIGGS HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RIGGS HOUSE"
      },
      {
        "from": [
          "Fisherman's Grotto",
          "Fishermen's Grotto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fisherman's Grotto"
      },
      {
        "from": [
          "The White Turkeys",
          "The White Turkey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The White Turkey"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ALBERTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA"
      },
      {
        "from": [
          "TRUSTEES OF THE MISSOURI BOTANICAL GARDEN",
          "TRUSTEES OF THE MISSOUI BOTANICAL GARDEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TRUSTEES OF THE MISSOURI BOTANICAL GARDEN"
      },
      {
        "from": [
          "ALBEMARLE HOTEL",
          "ALBERMARLE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALBERMARLE HOTEL"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA",
          "NIPPON YUSEN KAISA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA"
      },
      {
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "from": [
          "ALCAZAR HOTEL",
          "AALCAZAR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALCAZAR HOTEL"
      },
      {
        "from": [
          "OCEAN STEAMSHIP CO.",
          "OCEAN STEAMSHOP CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEAN STEAMSHOP CO."
      },
      {
        "from": [
          "POLAND SPRING HOUSE",
          "POLAND SPRINGS HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POLAND SPRING HOUSE"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD",
          "NORDEUTSCHER LLOYD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD"
      },
      {
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "from": [
          "RED STAR LINE SS FRIESLAND",
          "RED STAR LINE-SS FRIESLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE SS FRIESLAND"
      },
      {
        "from": [
          "AMERICAN HOUSE",
          "American Houe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN HOUSE"
      },
      {
        "from": [
          "NEW ENGLAND MANUFACTURING JEWELERS' AND SILVERSMITHS' ASSOCIATION",
          "NEW ENGLAND MANUFACTURING JEWLERS' AND SILVERSMITHS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND MANUFACTURING JEWELERS' AND SILVERSMITHS' ASSOCIATION"
      },
      {
        "from": [
          "GREAT NORTHERN SYSTEM - DINING CARS",
          "GREAT NORTHERN SYSTEM - DINING CAR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GREAT NORTHERN SYSTEM - DINING CARS"
      },
      {
        "from": [
          "Metropolitan Club",
          "METROPOLITON CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "M.F.LYONS DINING ROOM",
          "M.F.LYONS DINING ROOMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "M.F.LYONS DINING ROOM"
      },
      {
        "from": [
          "The Lotos Club",
          "THE LOTUS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "ST.LOUIS CLUB",
          "ST. LOUIS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. LOUIS CLUB"
      },
      {
        "from": [
          "AMERICAL CHEMICAL SOCIETY",
          "American Chemical Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Chemical Society"
      },
      {
        "from": [
          "SMITH & MCNELLS",
          "SMITH & McNELL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELLS"
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-Carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "KING EDWARD VII",
          "KING ENDWARD VII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING EDWARD VII"
      },
      {
        "from": [
          "Young Men's Christian Association",
          "Young Man's Christian Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Men's Christian Association"
      },
      {
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA-LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFETERIA LUNCH"
      },
      {
        "from": [
          "PALACE HOTEL RESTAURAT AND LADIES GRILL ROOM",
          "PALACE HOTEL RESTAURANT AND LADIES GRILL ROOM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL RESTAURANT AND LADIES GRILL ROOM"
      },
      {
        "from": [
          "Great Northern Railway",
          "Great Norther Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "KING EDWARD VII",
          "KING EDARD VII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING EDWARD VII"
      },
      {
        "from": [
          "Greenhut-Siegel Cooper Co.",
          "Greehut-Siegel Cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Greenhut-Siegel Cooper Co."
      },
      {
        "from": [
          "RED STAR LINE - S.S. SOUTHWARK",
          "RED STAR LINE - S.S.SOUTHWARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S. SOUTHWARK"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT & CAFE"
      },
      {
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY COMPANY OF MASSACHUSETTS",
          "ANCINT AND HONORABLE ARTILLERY COMPANY OF MASSACHUSETTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT AND HONORABLE ARTILLERY COMPANY OF MASSACHUSETTS"
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "from": [
          "S.S. New Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. New Amsterdam"
      },
      {
        "from": [
          "SMITH & MCNELLS",
          "SMITH & MC NELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELLS"
      },
      {
        "from": [
          "HAMBURG-AMERIKA LINIE",
          "HAMBURG AMERIKA LINIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG-AMERICA LINE"
      },
      {
        "from": [
          "Gardner & Smith",
          "Gerdner & Smith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gardner & Smith"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Coffee Shop",
          "Coffe Shop"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Shop"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobblestones"
      },
      {
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. DENNETT"
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "TATLER'S HOTEL",
          "STATLER'S HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TATLER'S HOTEL"
      },
      {
        "from": [
          "ROYAL POINCIANA",
          "ROYAL PONCIANA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL PONCIANA"
      },
      {
        "from": [
          "NATIONAL WHOLESALE DRUGGISTS' ASSOCIATION",
          "NATIONAL WHOLESALE DRUGGESTS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL WHOLESALE DRUGGISTS' ASSOCIATION"
      },
      {
        "from": [
          "Aldine Club Rooms",
          "Aldine Club Rooma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club Rooms"
      },
      {
        "from": [
          "PACIFIC MAIL STEAMSHIP COMPANY",
          "PACIFIC MAIL STEAMSHP COMPANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PACIFIC MAIL STEAMSHIP COMPANY"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Walforf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "WESTMINSTER HOTEL",
          "WESTMINISTER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WESTMINSTER HOTEL"
      },
      {
        "from": [
          "St. Francis Hotel",
          "ST.FRANCIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Mayflower Hotel",
          "Mayflower Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mayflower Hotel"
      },
      {
        "from": [
          "Grand Hotel",
          "GRAD HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel"
      },
      {
        "from": [
          "Hotel McAlpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel McAlpin"
      },
      {
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STER LINE - ANTWERPEN - NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "from": [
          "BERMUDA CATERING CO.",
          "BERMUDA CATERING COY."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BERMUDA CATERING CO."
      },
      {
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. RALEIGH"
      },
      {
        "from": [
          "HOLLAND-AMERICA LINE",
          "HOLLAND-AMERICAN LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND-AMERICA LINE"
      },
      {
        "from": [
          "SIEGEL COOPER CO.",
          "SIEGEL-COOPER CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SIEGEL-COOPER CO."
      },
      {
        "from": [
          "CLIFTON HOUSE",
          "Clinton House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton House"
      },
      {
        "from": [
          "Tadich Grill",
          "Tadlich Grill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tadich Grill"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "PROVINZIAL LIEDERTAFEL",
          "PROVINZIAL-LIEDERTAFEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROVINZIAL LIEDERTAFEL"
      },
      {
        "from": [
          "Hotel Lacher",
          "Hotel Sacher"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lacher"
      },
      {
        "from": [
          "La Camelia",
          "Le Camelia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Camelia"
      },
      {
        "from": [
          "The Bellevue-Stratford",
          "The Bellvue-Stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-Stratford"
      },
      {
        "from": [
          "Jansen's Restaurant",
          "Janssen's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jansen's Restaurant"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA"
      },
      {
        "from": [
          "Cortland",
          "Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cortland"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "CIGAR LEAF TOBACCO BOARD OF TRADE OF THE UNITED STATES",
          "JCIGAR LEAF TOBACCO BOARD OF TRADE OF THE UNITED STATES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIGAR LEAF TOBACCO BOARD OF TRADE OF THE UNITED STATES"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Café des Beaux Arts",
          "Café des Beaux-Arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café des Beaux Arts"
      },
      {
        "from": [
          "HOTEL SEILER",
          "HOTELS SEILER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SEILER"
      },
      {
        "from": [
          "COLUMBIA UNIVERSITY RESTAUANT",
          "COLUMBIA UNIVERSITY RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBIA UNIVERSITY RESTAURANT"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA",
          "NIPPON PUSEN KAISHA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA"
      },
      {
        "from": [
          "DEL CORONADO HOTEL",
          "DEL CORONADAO HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEL CORONADO HOTEL"
      },
      {
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. AMSTERDAM"
      },
      {
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK",
          "BRITISHSCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
      },
      {
        "from": [
          "COLOMBO HOTEL",
          "Colombi Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombi Hotel"
      },
      {
        "from": [
          "STATE DEPARTMENT SPECIAL TO THE PAND-AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)",
          "STATE DEPARTMENT SPECIAL TO THE PAN-AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STATE DEPARTMENT SPECIAL TO THE PAN-AMERICAN CONGRESS AT THE CITY OF MEXICO (PULLMAN CAR SERVICE)"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILDS' LUNCH ROOM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "from": [
          "PHONIX HOTEL",
          "Phoenix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phoenix Hotel"
      },
      {
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUSCHER LLOYD BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "SMITH & MC NELL",
          "SMITH & MC NELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MC NELL"
      },
      {
        "from": [
          "BOSTON MERCHANTS ASSOCIATION",
          "BOSTON MERCHANTS ASSOCIATIONI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON MERCHANTS ASSOCIATION"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-Stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "ALCAZAR HOTEL",
          "ALGAZAR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALCAZAR HOTEL"
      },
      {
        "from": [
          "NEW YORK STATE HOTEL ASSOCIATION",
          "NEW-YORK STATE HOTEL ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK STATE HOTEL ASSOCIATION"
      },
      {
        "from": [
          "ST. REGIS HOTEL",
          "ST.REGIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. REGIS HOTEL"
      },
      {
        "from": [
          "TWENTIETH CENTURY ALDERMANIC ASSOCIATION",
          "TWENTIETH CENTURY ALDERMANIR ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TWENTIETH CENTURY ALDERMANIC ASSOCIATION"
      },
      {
        "from": [
          "FIRST PANEL SHERIFF'S JURY",
          "FIRST PANEL SHERFIFF'S JURY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIRST PANEL SHERIFF'S JURY"
      },
      {
        "from": [
          "COMMERCIAL CLUB OF CINCINNATI",
          "C0MMERCIAL CLUB OF CINCINNATI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB OF CINCINNATI"
      },
      {
        "from": [
          "LONG BEACH HOTEL",
          "LOHG BEACH HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONG BEACH HOTEL"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "HAMBURG-AMERIKA LINIE",
          "HAMBURG-AMERIKA LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG-AMERICA LINE"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S.KOBI MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KOBI MARU"
      },
      {
        "from": [
          "HOTEL WALTON",
          "Hotel Walson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walson"
      },
      {
        "from": [
          "Henri Iv Restaurant",
          "Henri Iv Restaurants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Henri Iv Restaurant"
      },
      {
        "from": [
          "MANHASSET CLUB",
          "MANHASSETT CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHASSET CLUB"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD BREMAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA - HING KONG MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLAT IRON RESTAURANT AND CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT AND CAFE"
      },
      {
        "from": [
          "Palace Hotel Restaurant",
          "PALACE HOTEL RESTAURAT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "Sheraton Hotel",
          "Sheraton Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sheraton Hotel"
      },
      {
        "from": [
          "THE ROUND TABLE",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ROUND TABLE"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-Carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "CUNARD LINE-R.M.S. PAVONIA",
          "CUNARD LINE R.M.S. PAVONIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CUNARD LINE-R.M.S. PAVONIA"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT"
      },
      {
        "from": [
          "PENNSYLVANIA RAILROAD DINING CARS",
          "PENNSYLVANIA RAILROAD DINING CAR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENNSYLVANIA RAILROAD DINING CARS"
      },
      {
        "from": [
          "Aldine Club",
          "Alpine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "AMERICAN HOTEL",
          "Americana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Americana Hotel"
      },
      {
        "from": [
          "Ports O' Call",
          "Ports Of Call"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ports O' Call"
      },
      {
        "from": [
          "AMERICA ASSOCIATION OF PUBLIC ACCOUNTANTS",
          "AMERICAN ASSOCIATION OF PUBLIC ACCOUNTANTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN ASSOCIATION OF PUBLIC ACCOUNTANTS"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd",
          "Norddeutscher Lloyd Bremen;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "[restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given",
          "[restaurant Name And/or Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel (?)",
          "Fifth Avenue Hotel?",
          "(fifth Avenue Hotel?}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Child's"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's"
      },
      {
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker (?)",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Knickerbocker Hotel"
      },
      {
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Merchant's Club",
          "Merchants' Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St, Denis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Hotel Imperial",
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Hotel"
      },
      {
        "from": [
          "American Medical Editor's Association",
          "American Medical Editors' Association",
          "American Medical Editors Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Medical Editors' Association"
      },
      {
        "from": [
          "Hotel Metropole",
          "Metropole Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropole Hotel"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"american Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Alta Vista Hotel",
          "Alta Vista Hotel (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alta Vista Hotel"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "De L'ange Hotel",
          "Hotel De L'ange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "De L'ange Hotel"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Co. Of Massachusetts"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of The Society Of Colonial Wars In The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "Del Prado Hotel",
          "Hotel Del Prado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Prado Hotel"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Child's Lunch Rooms"
      },
      {
        "from": [
          "Engineers Club",
          "Engineers' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Engineers' Club"
      },
      {
        "from": [
          "Hotel Manhattan",
          "Manhattan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Hotel"
      },
      {
        "from": [
          "Hotel Victory",
          "Victory Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Victory Hotel"
      },
      {
        "from": [
          "? Club",
          "Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Club"
      },
      {
        "from": [
          "Paquebot \\liberté\\\"\"",
          "Paquebot Liberte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot Liberte"
      },
      {
        "from": [
          "Hotel Grunewald",
          "Grunewald Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grunewald Hotel"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Hotel Alcazar",
          "Alcazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alcazar Hotel"
      },
      {
        "from": [
          "Cafe Savarin",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Savarin"
      },
      {
        "from": [
          "St. Nicholas Hotel",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel"
      },
      {
        "from": [
          "Hotel Colorado",
          "Colorado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colorado Hotel"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Hotel Colombo",
          "Colombo Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombo Hotel"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient & Accepted Scottish Rite"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirates' House"
      },
      {
        "from": [
          "Michigan Society Of The Sons Of The American Revolution",
          "Michigan Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michigan Society Of The Sons Of The American Revolution"
      },
      {
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club Of Boston"
      },
      {
        "from": [
          "Second Panel Sheriff's Jury",
          "Sheriff's Jury Second Panel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Panel Sheriff's Jury"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks' Club House"
      },
      {
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Musee"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Tavern On The Green"
      },
      {
        "from": [
          "Minot Hotel",
          "Hotel Minot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Minot Hotel"
      },
      {
        "from": [
          "[restaurant And/or Location Not Given.]",
          "[restaurant And/or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "Kempinski Restaurant",
          "Restaurant Kempinski"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kempinski Restaurant"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. New Amsterdam"
      },
      {
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "Bristol Hotel",
          "Hotel Bristol"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "Worthy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Worthy Hotel"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Majestic Hotel"
      },
      {
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willards Hotel"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "Century Club",
          "Century Club?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Century Club"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel"
      },
      {
        "from": [
          "Hotel Chamberlin",
          "Chamberlin Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlin Hotel"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Continental Hotel",
          "Hotel Continental"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Continental Hotel"
      },
      {
        "from": [
          "New York Central System",
          "[new York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "Colonial Hotel",
          "Hotel Colonial"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Hotel"
      },
      {
        "from": [
          "Hotel St. Regis",
          "St. Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Hotel Netherland",
          "Netherland Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Netherland Hotel"
      },
      {
        "from": [
          "St.Regis Hotel",
          "Hotel St.Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Regis Hotel"
      },
      {
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "Hotel Velvet",
          "Velvet Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Velvet Hotel"
      },
      {
        "from": [
          "Society Of Sons Of The Revolution In The State Of Missouri",
          "Society Sons Of The Revolution In The State Of Missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Sons Of The Revolution In The State Of Missouri"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf Astoria?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Empire Hotel",
          "Hotel Empire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire Hotel"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot \\france\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot France"
      },
      {
        "from": [
          "Royal Palm Hotel",
          "Hotel Royal Palm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal Palm"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.(?)",
          "Rg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G."
      },
      {
        "from": [
          "Columbia Hotel",
          "Hotel Columbia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia Hotel"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "New Grand Hotel",
          "Grand New Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Grand Hotel"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza Hotel"
      },
      {
        "from": [
          "Cafe De Paris",
          "Café De Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe De Paris"
      },
      {
        "from": [
          "Xiii Club",
          "Club Xiii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Club Xiii"
      },
      {
        "from": [
          "Place Viger Hotel",
          "Hotel Place Viger"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Place Viger Hotel"
      },
      {
        "from": [
          "Hotel Lafayette",
          "Lafayette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lafayette Hotel"
      },
      {
        "from": [
          "Empire State Society Of Sons Of The American Revolution",
          "Empire State Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire State Society Of Sons Of The American Revolution"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Hotel"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savoy Hotel"
      },
      {
        "from": [
          "Hotel Dennis",
          "Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dennis Hotel"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Café Lafayette",
          "Cafe Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Lafayette"
      },
      {
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mouquin Restaurant And Wine Co."
      },
      {
        "from": [
          "Imperial",
          "Imperial (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commodore Hotel"
      },
      {
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Winthrop Hotel"
      },
      {
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyers Hotel"
      },
      {
        "from": [
          "Hotel Phonix",
          "Phonix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phonix Hotel"
      },
      {
        "from": [
          "Hotel Biltmore",
          "Biltmore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Biltmore Hotel"
      },
      {
        "from": [
          "Hotel Jefferson",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jefferson Hotel"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel D'angleterre",
          "D'angleterre Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "D'angleterre Hotel"
      },
      {
        "from": [
          "R.M.S. \"queen Mary\"\"\"",
          "R.M.S. \\queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Queen Mary"
      },
      {
        "from": [
          "Claremont Hotel",
          "Hotel Claremont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Claremont Hotel"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Del Coronado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Coronado Hotel"
      },
      {
        "from": [
          "Cafe Boulevard",
          "Café Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "Hotel Champlain",
          "Champlain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Champlain Hotel"
      },
      {
        "from": [
          "R.M.S. \\mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Mauretania"
      },
      {
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metlife Building"
      },
      {
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Frederik Viii"
      },
      {
        "from": [
          "Hotel Eastman",
          "Eastman Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eastman Hotel"
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza Ballroom"
      },
      {
        "from": [
          "Menzie's Hotel",
          "Menzies Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzie's Hotel"
      },
      {
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Bankers' Association"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "Restaurant Brevoort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Brevoort"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Promenade"
      },
      {
        "from": [
          "S.S. \"ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Ile De France"
      },
      {
        "from": [
          "Master Printers' Association",
          "Master Printers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Master Printers Association"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mayan Restaurant"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Castleton Hotel",
          "Hotel Castleton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Castleton Hotel"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New England Society In The City Of New York"
      },
      {
        "from": [
          "Grenoble Hotel",
          "Hotel Grenoble"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grenoble Hotel"
      },
      {
        "from": [
          "Penn Rr Pullman Dining Car Service",
          "Penn. Rr Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn Rr Pullman Dining Car Service"
      },
      {
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route"
      },
      {
        "from": [
          "Alpha Kappa Kappa",
          "Kappa Alpha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kappa Alpha"
      },
      {
        "from": [
          "National Cooper's Association",
          "National Coopers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Cooper's Association"
      },
      {
        "from": [
          "Windsor Hotel",
          "Hotel Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel"
      },
      {
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Hotel"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marie Antoinette Hotel"
      },
      {
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quisisana Hotel"
      },
      {
        "from": [
          "United States Government",
          "United States Government?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United States Government"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "Albany Zouave Cadets Old Guard",
          "Old Guard Albany Zouave Cadets"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany Zouave Cadets Old Guard"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society"
      },
      {
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Remo Hotel"
      },
      {
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's"
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George Hotel"
      },
      {
        "from": [
          "Grand Hotel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Grand Hotel"
      },
      {
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza Hotel"
      },
      {
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Hotel"
      },
      {
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Hotel"
      },
      {
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vendome Hotel"
      },
      {
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Transatlantique"
      },
      {
        "from": [
          "U.S. Army Subsistence Dept.",
          "Us Army Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S. Army Subsistence Dept."
      },
      {
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martinique Hotel"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Weston Hotel"
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Hotel Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copley-plaza"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Victoria Hotel"
      },
      {
        "from": [
          "Hotel Ponce De Leon",
          "Ponce De Leon Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ponce De Leon Hotel"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pontchartrain Hotel"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lexington Hotel"
      },
      {
        "from": [
          "Revelstoke Hotel",
          "Hotel Revelstoke"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revelstoke Hotel"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S. Kasuga",
          "Nippon Yusen Kaisha Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kasuga"
      },
      {
        "from": [
          "Pacific Mail S.S. Co.",
          "Pacific Mail Ss Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail S.S. Co."
      },
      {
        "from": [
          "Roanoke Hotel",
          "Hotel Roanoke"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roanoke Hotel"
      },
      {
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Des Indes Hotel"
      },
      {
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore Hotel"
      },
      {
        "from": [
          "Hotel Westminster",
          "Westminster Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Statler Hotel"
      },
      {
        "from": [
          "Hotel Vendome And Profile House",
          "Profile House And Hotel Vendome"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Profile House And Hotel Vendome"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "Gallatin Hotel",
          "Hotel Gallatin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gallatin Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "New England Shorthand Reporters' Association",
          "New England Shorthand Reporter's Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Shorthand Reporters' Association"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hamburg America Linie",
          "Hamburg Amerika Line",
          "Hamburg American Line",
          "Hamburg America Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg America Line"
      },
      {
        "from": [
          "Compagnie General Transatlantique",
          "Compagnie Generale Transatlantique",
          "Compngnie General Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie General Transatlantique"
      },
      {
        "from": [
          "Del Coronado Hotel",
          "Del Coronada Hotel",
          "Del Coronadao Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Coronado Hotel"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flat Iron Restaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant And Cafe"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mc Nells",
          "Smith & Mcnell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nells"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S. Kasuga",
          "Nippon Yusen Kaisha S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kasuga"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S. Kobe Maru",
          "Nipppon Yusen Kaisha S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kobe Maru"
      },
      {
        "from": [
          "Pacific Mail Steamship Co./trans Paciic Line",
          "Pacific Mail Steamship Co./trans Pacific Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co./trans Paciic Line"
      },
      {
        "from": [
          "Red Star Line S.S. Southwark",
          "Red Star Line S.S.Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line S.S. Southwark"
      },
      {
        "from": [
          "Clifton House",
          "Clinton House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton House"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Wiehl & Widmann",
          "Wiehl & Widman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wiehl & Widmann"
      },
      {
        "from": [
          "New York Life Insuance Company",
          "New York Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Life Insurance Company"
      },
      {
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. San Francisco"
      },
      {
        "from": [
          "Saratoga Racing Association",
          "Saratogy Racing Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Racing Association"
      },
      {
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant"
      },
      {
        "from": [
          "Commercial Club Of St. Louis",
          "Commercial Club Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of St. Louis"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flat Iron Restaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "U.S.M.S St. Paul",
          "U.S.M.S.St. Paul"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. St. Paul"
      },
      {
        "from": [
          "Bermuda Catering Co.",
          "Bermuda Catering Coy."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Catering Co."
      },
      {
        "from": [
          "Statler's Hotel",
          "Tatler's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tatler's Hotel"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Airlines"
      },
      {
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Round Table"
      },
      {
        "from": [
          "Pullman Dining Car Service The President",
          "Pullman Dining Car Serfvice The President"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service The President"
      },
      {
        "from": [
          "Hamburg Amerika Linie Steamer Furst Bismarck",
          "Hanburg Amerika Linie Steamer Furst Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie Steamer Furst Bismarck"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen America",
          "Norddeutscher Lloyd Bremen Amerika"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen America"
      },
      {
        "from": [
          "Palace Hotel Restaurant And Ladies Grill Room",
          "Palace Hotel Restaurat And Ladies Grill Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant And Ladies Grill Room"
      },
      {
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Societa La Piemontese"
      },
      {
        "from": [
          "S.S. Nieuw Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. New Amsterdam"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. President Wilson"
      },
      {
        "from": [
          "Holland America Line",
          "Holland American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland America Line"
      },
      {
        "from": [
          "Fisherman's Grotto",
          "Fishermen's Grotto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fisherman's Grotto"
      },
      {
        "from": [
          "Del Coronado Hotel",
          "Del Coronadao Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Coronado Hotel"
      },
      {
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. Dennett"
      },
      {
        "from": [
          "The White Turkeys",
          "The White Turkey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The White Turkey"
      },
      {
        "from": [
          "Great Northern System Dining Car",
          "Great Northern System Dining Cars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern System Dining Car"
      },
      {
        "from": [
          "Colombo Hotel",
          "Colombi Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombi Hotel"
      },
      {
        "from": [
          "Hotel Men's Mutual Benefit Aasociation",
          "Hotel Men's Mutual Benefit Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Men's Mutual Benefit Association"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S. Alberta",
          "Canadian Pacific Railway Co. S.S.Alberta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S. Alberta"
      },
      {
        "from": [
          "Ocean Steamship Co.",
          "Ocean Steamshop Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ocean Steamship Co."
      },
      {
        "from": [
          "Hotel Mcalpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Mcalpin"
      },
      {
        "from": [
          "Boston & Bangor Ssteamship Company",
          "Boston & Bangor Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston & Bangor Steamship Company"
      },
      {
        "from": [
          "St. Louis Club",
          "St.Louis Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis Club"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S.Kobi Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kobe Maru"
      },
      {
        "from": [
          "Columbia University Restauant",
          "Columbia University Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia University Restaurant"
      },
      {
        "from": [
          "Young Men's Christian Association",
          "Young Man's Christian Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Men's Christian Association"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Amsterdam"
      },
      {
        "from": [
          "The Rendez Vous",
          "The Rendez-vous"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Rendez Vous"
      },
      {
        "from": [
          "St. Regis Hotel",
          "St.Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Raleigh"
      },
      {
        "from": [
          "S.S. New Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. New Amsterdam"
      },
      {
        "from": [
          "Red Star Line Antwerpen Ny",
          "Red Star Line Antwerpen.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Antwerpen Ny"
      },
      {
        "from": [
          "Gardner & Smith",
          "Gerdner & Smith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gardner & Smith"
      },
      {
        "from": [
          "Pacific Mail Steamship Co./trans Pacific Line",
          "Pacific Mail Steamship Co. Trans Pacific Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co. Trans Pacific Line"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobblestones"
      },
      {
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "King Umberto And Queen Margharita",
          "King Umberto And Queen Margherita"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Umberto And Queen Margharita"
      },
      {
        "from": [
          "Clover Club Of Boston",
          "Cover Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clover Club Of Boston"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S.Athabasca",
          "Canadian Pacific Railway Co. S.S. Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S.Athabasca"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "Westminster Hotel",
          "Westminister Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Aldine Club Rooms",
          "Aldine Club Rooma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club Rooms"
      },
      {
        "from": [
          "Palace Hotel Restaurant",
          "Palace Hotel Restaurat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "First Panel Sheriff's Jury",
          "First Panel Sherfiff's Jury"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Panel Sheriff's Jury"
      },
      {
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "from": [
          "Toyo Kisen Kaisha Hong Kong Maru",
          "Toyo Kisen Kaisha Hing Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha Hong Kong Maru"
      },
      {
        "from": [
          "Poland Spring House",
          "Poland Springs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poland Spring House"
      },
      {
        "from": [
          "Mayflower Hotel",
          "Mayflower Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mayflower Hotel"
      },
      {
        "from": [
          "M.F.Lyons Dining Room",
          "M.F.Lyons Dining Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "M.F.Lyons Dining Room"
      },
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg America Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg America Line"
      },
      {
        "from": [
          "American House",
          "American Houe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American House"
      },
      {
        "from": [
          "Boston Merchants Association",
          "Boston Merchants Associationi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston Merchants Association"
      },
      {
        "from": [
          "Pocono Mountain House",
          "Pocano Mountain House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pocono Mountain House"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "R.M.S.Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Red Star Line Antwerpen Ny",
          "Red Star Line Antwepen Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Antwerpen Ny"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Yusen Kaisa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "La Camelia",
          "Le Camelia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Camelia"
      },
      {
        "from": [
          "Colonnade Restaurant",
          "Colonade Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonnade Restaurant"
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "Twentieth Century Aldermanic Association",
          "Twentieth Century Aldermanir Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Twentieth Century Aldermanic Association"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "Griswold House",
          "Griswald House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Griswold House"
      },
      {
        "from": [
          "Jansen's Restaurant",
          "Janssen's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jansen's Restaurant"
      },
      {
        "from": [
          "Phoenix Hotel",
          "Phonix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phoenix Hotel"
      },
      {
        "from": [
          "Greenhut-siegel Cooper Co.",
          "Greehut-siegel Cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Greenhut-siegel Cooper Co."
      },
      {
        "from": [
          "Royal Alexandria Hotel",
          "Royal Alexandra Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Alexandria Hotel"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "Nordeutscher Lloyd",
          "Norddeutscher Lloyd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd"
      },
      {
        "from": [
          "Down Town Club",
          "Downtown Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Downtown Club"
      },
      {
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Stationers Association"
      },
      {
        "from": [
          "America Association Of Public Accountants",
          "American Association Of Public Accountants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Association Of Public Accountants"
      },
      {
        "from": [
          "The Bellevue-stratford",
          "The Bellvue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-stratford"
      },
      {
        "from": [
          "National Wholesale Druggists' Association",
          "National Wholesale Druggests' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Wholesale Druggists' Association"
      },
      {
        "from": [
          "Pacific Mail Steamship Company",
          "Pacific Mail Steamshp Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Company"
      },
      {
        "from": [
          "Alcazar Hotel",
          "Aalcazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alcazar Hotel"
      },
      {
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant & Cafe"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd Breman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "Imperial Yacht Club Of St. Petersburg",
          "Imperial Yacht Club Of St.Petersburg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Yacht Club Of St. Petersburg"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "Hotel Seiler",
          "Hotels Seiler"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Seiler"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Nasuga",
          "Nippon Yusen Kaisha S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "The Lotos Club",
          "The Lotus Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotus Club"
      },
      {
        "from": [
          "Pennsylvania Railroad Dining Cars",
          "Pennsylvania Railroad Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad Dining Car"
      },
      {
        "from": [
          "Cigar Leaf Tobacco Board Of Trade Of The United States",
          "Jcigar Leaf Tobacco Board Of Trade Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigar Leaf Tobacco Board Of Trade Of The United States"
      },
      {
        "from": [
          "New York Southern Society",
          "New York Southen Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Southern Society"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisa S.S.Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Riggs House",
          "Briggs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs House"
      },
      {
        "from": [
          "Henri Iv Restaurant",
          "Henri Iv Restaurants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Henri Iv Restaurants"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mc Nells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nells"
      },
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg Armerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg America Line"
      },
      {
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Des Beaux Arts"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "Commercial Club Of Cincinnati",
          "C0mmercial Club Of Cincinnati"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of Cincinnati"
      },
      {
        "from": [
          "Sheraton Hotel",
          "Sheraton Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sheraton Hotel"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The Unitd States Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Pusen Kaisha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "American Hotel",
          "Americana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Americana Hotel"
      },
      {
        "from": [
          "Willards Hotel",
          "Willard Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willards Hotel"
      },
      {
        "from": [
          "New England Society Of Pennsylvania",
          "New England Society Of Pennsylvnia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society Of Pennsylvania"
      },
      {
        "from": [
          "Dobbeltskrue Postdampskibet",
          "Dobbelskrue Postdampskibet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dobbeltskrue Postdampskibet"
      },
      {
        "from": [
          "Hotel Dupont",
          "Hotel Du Pont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dupont"
      },
      {
        "from": [
          "Oceanic Steamship Company Sierra",
          "Oceanic Sreamship Company Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company Sierra"
      },
      {
        "from": [
          "Trustees Of The Missouri Botanical Garden",
          "Trustees Of The Missoui Botanical Garden"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trustees Of The Missouri Botanical Garden"
      },
      {
        "from": [
          "Aldine Club",
          "Alpine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alpine Club"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "Cromwell Steamship Company",
          "Cromwelll Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cromwell Steamship Company"
      },
      {
        "from": [
          "Ports O' Call",
          "Ports Of Call"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ports O' Call"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hotel Walton",
          "Hotel Walson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Tadich Grill",
          "Tadlich Grill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tadich Grill"
      },
      {
        "from": [
          "The Cortland",
          "The Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "Carleton Club",
          "Carlton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carleton Club"
      },
      {
        "from": [
          "Manhasset Club",
          "Manhassett Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhasset Club"
      },
      {
        "from": [
          "Albemarle Hotel",
          "Albermarle Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albemarle Hotel"
      },
      {
        "from": [
          "Breakfast Menu, S. S. Vaderland, March 18th, 1910.",
          "Breakfast Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Phililexian Society Of Columbia University",
          "Philolexian Society Of Columbia University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phililexian Society Of Columbia University"
      },
      {
        "from": [
          "Eaton's",
          "Keaton's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eaton's"
      },
      {
        "from": [
          "El Tovar Hotel",
          "El Covar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Tovar Hotel"
      },
      {
        "from": [
          "Dinner Menu, S.S. Vaderland, March 19th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S.S. Vaderland, March 19th, 1910."
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flat Iron Restaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant And Cafe"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S. Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kasuga"
      },
      {
        "from": [
          "Rathskeller",
          "Ratskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rathskeller"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kobe Maru"
      },
      {
        "from": [
          "Cortland",
          "Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cortland"
      },
      {
        "from": [
          "Luncheon Menu, S. S. Vaderland, March 18th, 1910.",
          "Luncheon Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Royal Poinciana",
          "Royal Ponciana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Poinciana"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's, Ny",
          "Delmonico's Ny?",
          "Delmonico's, N.Y.",
          "Delmonicos Ny",
          "Delmonicos', Ny",
          "Delmonicos, (ny)",
          "Delmonicos, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's, New York, N.Y.",
          "Delmonicos, New York, N.Y.",
          "Delmonico's , New York, Ny",
          "Delmonico's, (new York, Ny?)",
          "Delmonico's. New York, Ny",
          "Delmonicos, (new York, Ny?)",
          "Delmonicos, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      },
      {
        "from": [
          "Auditorium Hotel Chicago, Il",
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel , Chicago, Il",
          "Auditorium Hotel Chicago Il",
          "Auditorium Hotel, (?chicago, Il?)",
          "Auditorium Hotel, (chicago, Il?)",
          "Auditorium Hotel, Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel Chicago, Il"
      },
      {
        "from": [
          "En Route \"friedrich Der Grosse\"",
          "En Route - \"friedrich Der Grosse\"",
          "En Route \" Friedrich Der Grosse\"",
          "En Route \"friedrich Der Grosse \"",
          "En Route 'friedrich Der Grosse\"",
          "En Route - 'friedrich Der Grosse \"",
          "En Route - :friedrich Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route \"friedrich Der Grosse\""
      },
      {
        "from": [
          "New York",
          "(new York?)",
          "\"new York\"",
          "(new York)",
          "New York (?)",
          "New York(?)",
          "New York?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "Ss Friesland",
          "S.S. Friesland",
          "Ss. Friesland",
          "S.S. \"friesland\"",
          "Ss \"friesland\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Friesland"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia Pa",
          "Philadelphia, Pa.",
          "Philadelphia, Pa?",
          "Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "New York, Ny",
          "New York, Ny?",
          "(new York, Ny?)",
          "New York Ny",
          "New York, Ny ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "The New Willard, Washington, Dc",
          "New Willard, The, Washington, Dc",
          "The New Willard Washington, Dc",
          "The New Willard, Washington Dc",
          "The New Willard, Washington, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard, Washington, Dc"
      },
      {
        "from": [
          "En Route - Ss \"lahn\"",
          "En Route - \"ss Lahn\"",
          "En Route \"ss Lahn\"",
          "En Route -ss \"lahn\"",
          "En Route _ Ss \"lahn\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route - \"ss Lahn\""
      },
      {
        "from": [
          "Providence, Ri",
          "Providence, R.I.",
          "Providence Ri",
          "Providence Ri?",
          "Providence, Ri?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, R.I."
      },
      {
        "from": [
          "En Route S.S.\"barbarossa\"",
          "En Route - S.S.Barbarossa",
          "En Route S.S.Barbarossa",
          "En Route S.S.Barbarossa\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route - S.S.Barbarossa"
      },
      {
        "from": [
          "Sherry's Ny",
          "Sherry's, Ny",
          "Sherry's (ny?)",
          "Sherrys, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's, Ny"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort Va",
          "Old Point Comfort, Va.",
          "Old Point, Comfort, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Brunswick Hotel Ny?",
          "Hotel Brunswick Ny?",
          "Hotel Brunswick, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan Ny",
          "Manhattan Hotel Ny",
          "Manhattan Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "At Sea",
          "At Sea ?",
          "(at Sea)",
          "At Sea?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "At Sea"
      },
      {
        "from": [
          "Delmonico's New York",
          "Delmonico's, New York",
          "Delmonicos, New York",
          "Delmonico's,( New York)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's New York"
      },
      {
        "from": [
          "Ny",
          "(ny)",
          "(n.Y.)",
          "(ny?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ny"
      },
      {
        "from": [
          "Marlborough Hotel, (?)",
          "Hotel Marlborough",
          "Hotel Marlborough, (?)",
          "Marlborough Hotel, ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlborough Hotel"
      },
      {
        "from": [
          "The Auditorium, Chicago, Il",
          "The Auditorium Chicago, Il",
          "Auditorium, The, Chicago, Il",
          "The Auditorium Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium Chicago, Il"
      },
      {
        "from": [
          "Rms Campania",
          "R.M.S. Campania",
          "R.M.S. \"campania\"",
          "R.M.S. \" Campania\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Campania"
      },
      {
        "from": [
          "New Algonquin Club, Boston, Ma",
          "New Algonquin Club Boston, Ma",
          "New Algonquin Club, (boston, Ma?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Algonquin Club, Boston, Ma"
      },
      {
        "from": [
          "Hotel Pfister, Milwaukee, Wi",
          "Hotel Pfister, Milwaukee Wi",
          "Pfister Hotel, Milwaukee, Wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pfister, Milwaukee, Wi"
      },
      {
        "from": [
          "Ss: Kamakura Maru",
          "Ss: \"kamakura Maru\"",
          "Ss Kamakura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss: Kamakura Maru"
      },
      {
        "from": [
          "66 St. & B'way Ny",
          "66 St. & B'way. Ny",
          "66 St. & Bway. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66 St. & B'way, Ny"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago Il",
          "Chicago Il?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "R.M.S. \"empress Of China\"",
          "Rms Empress Of China",
          "R.M.S. Empress Of China"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Empress Of China"
      },
      {
        "from": [
          "Ss Westernland",
          "S.S. Westernland",
          "S.S. \"westernland\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Westernland"
      },
      {
        "from": [
          "Washington, Dc",
          "Washington, D.C.",
          "Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, D.C."
      },
      {
        "from": [
          "Queen City Club, Cincinnati, Oh",
          "Queen City Club (cincinnati Oh?)",
          "Queen City Club Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati, Oh"
      },
      {
        "from": [
          "Ss City Of Rio De Janeiro",
          "S.S. \"city Of Rio De Janeiro\"",
          "Ss City Of Rio De Janeiro?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Rio De Janeiro"
      },
      {
        "from": [
          "(chicago, Ill)",
          "Chicago ,ill",
          "Chicago, Ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago ,ill"
      },
      {
        "from": [
          "Detroit, Mi",
          "(detroit, Mi?)",
          "Detroit, Mi?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Detroit, Mi"
      },
      {
        "from": [
          "The Waldorf, ?new York, Ny",
          "The Waldorf, New York, Ny",
          "The Waldorf, New York, Ny?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf, New York, Ny"
      },
      {
        "from": [
          "Delmonico's, New York City",
          "New York City Delmonico's",
          "New York City, Delmonico's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York City"
      },
      {
        "from": [
          "Lakewood, Nj",
          "Lakewood Nj",
          "Lakewood, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lakewood, Nj"
      },
      {
        "from": [
          "Mercantile Club (st Louis, Mo)",
          "Mercantile Club, St Louis Mo",
          "Mercantile Club, St. Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club, St. Louis, Mo"
      },
      {
        "from": [
          "Long Beach, L.I, Ny",
          "Long Beach, Li, Ny",
          "Long Beach, L.I., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, Li, Ny"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel",
          "Savoy Hotel, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savoy Hotel"
      },
      {
        "from": [
          "Ss Coptic",
          "S.S. \"coptic\"",
          "S.S. Coptic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Coptic"
      },
      {
        "from": [
          "Bellevue-stratford Hotel, Philadelphia, Pa",
          "Hotel Bellevue-stratford, Philadelphia, Pa",
          "Hotel Bellevue-stratford Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue-stratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "Zermatt, Switzerland",
          "(zermatt, Switzerland?)",
          "Zermatt Switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Zermatt, Switzerland"
      },
      {
        "from": [
          "R.M.S. \"etruria\"",
          "R.M.S. Etruria",
          "Rms Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Etruria"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St. Denis Hotel, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Buffalo, Ny",
          "(buffalo, Ny?)",
          "Buffalo Ny(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "The Hollenden Cleveland Oh?",
          "The Hollenden, Cleveland Oh",
          "The Hollenden, Cleveland, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hollenden, Cleveland, Oh"
      },
      {
        "from": [
          "Ss City Of Para",
          "S.S. \"city Of Para\"",
          "S.S. \"city Of Para'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"city Of Para\""
      },
      {
        "from": [
          "Young's Hotel, Boston, Ma",
          "Young\"s Hotel, Boston, Ma",
          "Young's Hotel, Boston Ma?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young\"s Hotel, Boston, Ma"
      },
      {
        "from": [
          "Hotel Majestic Philadelphia, Pa",
          "Hotel Majestic, Philadelphia, Pa",
          "Majestic Hotel, Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic Philadelphia, Pa"
      },
      {
        "from": [
          "San Francisco, Ca",
          "San Francisco, Ca?",
          "(san Francisco, Ca?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "Brunswick Hotel, Boston, Ma",
          "Hotel Brunswick, Boston, Ma",
          "Hotel Brunswick, Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Hotel, Boston, Ma"
      },
      {
        "from": [
          "R.M.S. \"lucania\"",
          "Rms Lucania",
          "R.M.S. Lucania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Lucania"
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton County Ny",
          "Clinton County, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Ss Kasuga",
          "S.S. Kasuga",
          "Ss: Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Kasuga"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome Boston, Ma",
          "Vendome Hotel, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland Oh",
          "Cleveland, Oh?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "Paris, France",
          "Paris, France(?)",
          "Paris, France?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paris, France"
      },
      {
        "from": [
          "Nassau,n.P.Bahamas",
          "Nassau,np,bahamas",
          "Nassau,n.P.,bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau,n.P.Bahamas"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington (washington Dc?)",
          "The Arlington, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "Astor Hotel, New York, Ny",
          "Hotel Astor, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel, New York, Ny"
      },
      {
        "from": [
          "Parker House, Boston,mass",
          "Parker House Boston,mass ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House, Boston, Ma"
      },
      {
        "from": [
          "En Route \"h.H.Meier\"",
          "En Route \" H.H.Meier\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route \" H.H.Meier\""
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "Konigin Luise",
          "\"konigin Luise\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Konigin Luise"
      },
      {
        "from": [
          "Paris,france",
          "(paris,france)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paris, France"
      },
      {
        "from": [
          "Hotel Savoy New York",
          "Hotel Savoy, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, New York"
      },
      {
        "from": [
          "Savoy Hotel, New York, Ny",
          "Hotel Savoy, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, New York, Ny"
      },
      {
        "from": [
          "New York,ny",
          "(new York,ny)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "Aboard R.M.S. \"etruria\"",
          "Aboard R.M.S. Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard R.M.S. Etruria"
      },
      {
        "from": [
          "Lincoln Club - Ny",
          "Lincoln Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club Ny"
      },
      {
        "from": [
          "St. Augustine, Fla",
          "St. Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fla"
      },
      {
        "from": [
          "Windsor Hotel Ny",
          "Windsor Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel Ny"
      },
      {
        "from": [
          "Melbourne,australia",
          "Melbourne,australia?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau, Np"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman House, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House, New York, Ny"
      },
      {
        "from": [
          "New York City",
          "?new York City?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City"
      },
      {
        "from": [
          "Brooklyn,ny",
          "Brooklyn,ny(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Hotel Jefferson, St. Louis, Mo",
          "Jefferson Hotel, St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson, St. Louis, Mo"
      },
      {
        "from": [
          "Aboard Paquebot La Provence",
          "Aboard Paquebot \"la Provence\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Provence"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Hotel Stenton Philadelphia Pa",
          "Hotel Stenton, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton Philadelphia Pa"
      },
      {
        "from": [
          "(rome,italy)",
          "Rome,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Ss Trinidad",
          "S.S. \"trinidad\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Trinidad"
      },
      {
        "from": [
          "Liverpool England?}",
          "Liverpool, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Liverpool, England"
      },
      {
        "from": [
          "Frankfurt, Germany",
          "Frankfurt, Germany?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurt, Germany"
      },
      {
        "from": [
          "Portland, Me",
          "Portland Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Aboard Paquebot \"la Savoie\"",
          "Aboard Paquebot La Savoie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot \"la Savoie\""
      },
      {
        "from": [
          "The Bellevue-stratford, Philadelphia, Pa",
          "The Bellevue-stratford, Philadelphia, Pa?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-stratford, Philadelphia, Pa"
      },
      {
        "from": [
          "Young's Hotel",
          "Young's Hotel ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young's Hotel"
      },
      {
        "from": [
          "Mechanics Hall, Boston, Ma",
          "Mechanics' Hall, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mechanics Hall, Boston, Ma"
      },
      {
        "from": [
          "Eagle Hotel (gettysburg, Pa?)",
          "Eagle Hotel, Gettysburg, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eagle Hotel, Gettysburg, Pa"
      },
      {
        "from": [
          "Hotel Del Campidoglio, New York, Ny",
          "Hotel Del Campidoglio, New York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Campidoglio, New York, Ny"
      },
      {
        "from": [
          "(california?)",
          "California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "California"
      },
      {
        "from": [
          "Clinton County,ny",
          "Clinton County.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Gramercy Park Hotel Hotel Gramercy Park 52 Gramercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "Delmonico's,ny",
          "Delmonico's,(ny?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, Ny"
      },
      {
        "from": [
          "Tacoma Wa",
          "Tacoma, Wa?}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tacoma, Wa"
      },
      {
        "from": [
          "R.M.S. Empress Of India",
          "R.M.S. \"empress Of India\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Empress Of India"
      },
      {
        "from": [
          "Baltimore,md",
          "Baltimore,md."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore, Md"
      },
      {
        "from": [
          "En Route Aboard Ss Kasuga Maru",
          "En Route Aboard Ss. Kasuga Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kasuga Maru"
      },
      {
        "from": [
          "Hotel Zinzendorf, Winston-salem, Nc",
          "Zinzendorf Hotel, Winston-salem, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Zinzendorf, Winston-salem, Nc"
      },
      {
        "from": [
          "Nashville, Tn?",
          "Nashville, Tn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nashville, Tn"
      },
      {
        "from": [
          "Cleveland, Ohio",
          "Cleveland. Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Ohio"
      },
      {
        "from": [
          "The Ten Eyck, Albany, Ny",
          "Ten Eyck, The, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Ten Eyck, Albany, Ny"
      },
      {
        "from": [
          "Butler, Pa",
          "Butler, Pa."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Butler, Pa"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "(chicago,il)",
          "Chicago,il."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel"
      },
      {
        "from": [
          "Virginia Beach, Va",
          "Virginia Beach Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach Va"
      },
      {
        "from": [
          "Hotel Savoy, Ny",
          "Hotel Savoy Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy Ny"
      },
      {
        "from": [
          "Detroit,mi",
          "(detroit,mi?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Detroit, Mi"
      },
      {
        "from": [
          "Manila, P.I.",
          "Manila, Pi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manila, Pi"
      },
      {
        "from": [
          "Bellevue Hotel, Philadelphia, Pa",
          "Hotel Bellevue, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bellevue, Philadelphia Pa"
      },
      {
        "from": [
          "Grand Pacific Hotel, Chicago, Il",
          "Grand Pacific Hotel Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel, Chicago, Il"
      },
      {
        "from": [
          "Cincinnati,oh",
          "Cincinnati,oh?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "Montreal Canada?",
          "Montreal, Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal, Canada"
      },
      {
        "from": [
          "Nassau, N.P. Bahamas",
          "Nassau, N.P., Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P. Bahamas"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa Fl?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "Manhattan Hotel, New York, Ny",
          "Hotel Manhattan, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Hotel, New York, Ny"
      },
      {
        "from": [
          "Union League Philadelphia Pa?",
          "Union League, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League, Philadelphia, Pa"
      },
      {
        "from": [
          "Narragansett Hotel, Providence Ri",
          "Narragansett Hotel, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Hotel, Providence, Ri"
      },
      {
        "from": [
          "The Raleigh, Washington, Dc",
          "The Raleigh, Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Raleigh, Washington, Dc"
      },
      {
        "from": [
          "Horticultural Hall, Philadelphia, Pa",
          "Horticultural Hall, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horticultural Hall, Philadelphia, Pa"
      },
      {
        "from": [
          "Commercial Club, Portland, Or",
          "Portland Commercial Club, Portland, Or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club, Portland, Or"
      },
      {
        "from": [
          "Boston, Ma",
          "Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "The Wellington, Providence Ri",
          "Wellington, The, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Wellington, Providence Ri"
      },
      {
        "from": [
          "(?fla?)",
          "Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fla."
      },
      {
        "from": [
          "New York Athletic Club",
          "New York Athletic Club, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "Tampa,fla.",
          "Tampa.Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa.Fla."
      },
      {
        "from": [
          "Boston, Mass",
          "Boston, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "St. George Hotel, Nyack, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Melbourne, Australia",
          "Melbourne Australia?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Lucerne,switzerland",
          "Lucerne,switzerland?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lucerne, Switzerland"
      },
      {
        "from": [
          "Nos. 667 To 677 Broadway , Opposite Bond Street, Midway Between Battery And Central Park, New York Ny",
          "Nos. 667 To 677 Broadway , Opposite Bond Street, Midway Between Battery And Central Park, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nos. 667 To 677 Broadway , Opposite Bond Street, Midway Between Battery And Central Park, New York Ny"
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Washington,d.C.",
          "Washington,dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, D.C."
      },
      {
        "from": [
          "Boston,mass",
          "(boston,mass)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen Denmark?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "Brunswick,the,boston Mass",
          "Brunswick,the,boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick,the, Boston Ma"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver, Colo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "S.S. Nacoochee",
          "Ss Nacoochee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nacoochee"
      },
      {
        "from": [
          "Ss Rio De Janeiro",
          "Ss: Rio De Janeiro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Rio De Janeiro"
      },
      {
        "from": [
          "Rms Oceanic",
          "R.M.S. Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Argyle, The, Brooklyn, Ny",
          "The Argyle, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Argyle, Brooklyn, Ny"
      },
      {
        "from": [
          "Chamberlin's Washington,dc?",
          "Chamberlin's, (washington,d.C.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlin's Washington, dc"
      },
      {
        "from": [
          "Union League Club Ny",
          "Union League Club, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club, Ny"
      },
      {
        "from": [
          "Metropolitan Club, ?new York, Ny",
          "Metropolitan Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club, New York, Ny"
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "St. Denis Hotel Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel, Ny"
      },
      {
        "from": [
          "Tontine Hotel, New Haven, Ct",
          "New Tontine Hotel, New Haven Ct"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tontine Hotel, New Haven, Ct"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "\"the Argyle\"",
          "The Argyle ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Argyle"
      },
      {
        "from": [
          "Manhattan Beach, Long Island Ny",
          "Manhattan Beach, Long Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach, Long Island, Ny"
      },
      {
        "from": [
          "En Route Aboard S.S. \"kobe Waru\"",
          "En Route Aboard S.S. Kobe Waru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Kobe Waru"
      },
      {
        "from": [
          "Palace Hotel Denver, Col",
          "Palace Hotel, Denver, Col"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, Denver, Col"
      },
      {
        "from": [
          "Germantown (pa?)",
          "Germantown, Pa?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Germantown, Pa"
      },
      {
        "from": [
          "Dampfer H.H. Meier",
          "Dampfer \"h.H. Meier\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer H.H. Meier"
      },
      {
        "from": [
          "Omaha Nebraska",
          "Omaha, Nebraska"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omaha, Nebraska"
      },
      {
        "from": [
          "Germany",
          "Germany(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Germany"
      },
      {
        "from": [
          "New Willard Washington, Dc",
          "New Willard, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Willard Washington, Dc"
      },
      {
        "from": [
          "Chicago,ill.",
          "Chicago,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinnati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Ohio"
      },
      {
        "from": [
          "Dampfer Kaiser Wilhelm Der Grosse",
          "Dampfer \"kaiser Wilhelm Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Convention Hall, (buffalo, Ny?)",
          "Convention Hall, Buffalo, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Convention Hall, Buffalo, Ny"
      },
      {
        "from": [
          "Philadelphia,pa.",
          "Philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "Waldorf-astoria, Ny",
          "Waldorf-astoria Ny?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-Astoria, Ny"
      },
      {
        "from": [
          "Ascot England",
          "Ascot, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ascot, England"
      },
      {
        "from": [
          "Logan House, Altoona, Pa",
          "Logan House Altoona, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Logan House, Altoona, Pa"
      },
      {
        "from": [
          "Penn",
          "Penn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier, Ri"
      },
      {
        "from": [
          "Union Club",
          "Union Club, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "Adelaide, Australia",
          "Adelaide Australia?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adelaide, Australia"
      },
      {
        "from": [
          "Grand Hotel, Cincinnati Oh",
          "Grand Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Cincinnati, Oh"
      },
      {
        "from": [
          "Pullman Dining Car Service En Route",
          "Pullman Dining Car Service (en Route?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service En Route"
      },
      {
        "from": [
          "En Route S.S Vaderland",
          "En Route S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Vaderland"
      },
      {
        "from": [
          "Academy Of Music Brooklyn, Ny",
          "Academy Of Music, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Academy Of Music, Brooklyn, Ny"
      },
      {
        "from": [
          "San Francisco,ca",
          "San Francisco,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "St. Louis, Mo",
          "St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Long Beach,l.I., Ny&",
          "Long Beach,li, Ny?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach,li, Ny"
      },
      {
        "from": [
          "Magdeburg, Germany",
          "Magdeburg, Germany?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Magdeburg, Germany"
      },
      {
        "from": [
          "Fairmont Hotel San Francisco, Ca",
          "Fairmont Hotel, San Francisco, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel San Francisco, Ca"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg., Ny, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "Bellevue-stratford, Philadelphia, Pa",
          "Bellevue-stratford, (philadelphia, Pa?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue-stratford, Philadelphia, Pa"
      },
      {
        "from": [
          "The Plaza",
          "Plaza, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "Aboard Paquebot La Touraine",
          "Aboard Paquebot \"la Touraine\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Touraine"
      },
      {
        "from": [
          "Auditorium",
          "Auditorium, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium"
      },
      {
        "from": [
          "Hotel Iroquois,(buffalo,n.Y.)",
          "Hotel Iroquois,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois,buffalo, Ny"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Hotel Continental (paris, France?)",
          "Hotel Continental, Paris, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Continental, Paris, France"
      },
      {
        "from": [
          "Pawling, Ny",
          "Pawling Ny(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pawling, Ny"
      },
      {
        "from": [
          "R.M.S.Rotterdam",
          "Rms-rotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S.Rotterdam"
      },
      {
        "from": [
          "Ss Kaiser Wilhelm Der Grosse",
          "S.S. \"kaiser Wilhelm Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Aboard 'prinz Friedrich Wilhelm'",
          "Aboard Prinz Friedrich Wilhelm''"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Prinz Friedrich Wilhelm''"
      },
      {
        "from": [
          "En Route Aboard Above",
          "En Route Aboard Above (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Above"
      },
      {
        "from": [
          "Russell House, Detroit, Mi",
          "Russell House Detroit, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Russell House, Detroit, Mi"
      },
      {
        "from": [
          "New Orleans, La",
          "New Orleans, La?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Orleans, La"
      },
      {
        "from": [
          "Bar Harbor Me",
          "Bar Harbor, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bar Harbor, Me"
      },
      {
        "from": [
          "Schnelldampfer \"auguste Victoria\"",
          "Schnelldampfer: \"auguste Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer: \"auguste Victoria\""
      },
      {
        "from": [
          "Ss Doric",
          "S.S. \"doric\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Doric"
      },
      {
        "from": [
          "S.S. Zealandia",
          "Ss Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Zealandia"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "The Arlington,wash.Dc",
          "The Arlington,wash.Dc."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington Dc"
      },
      {
        "from": [
          "Union League",
          "(union League?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League"
      },
      {
        "from": [
          "Miramar (?)",
          "Miramar?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miramar"
      },
      {
        "from": [
          "Aboard Paquebot La Lorraine",
          "Aboard Paquebot \"la Lorraine\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Lorraine"
      },
      {
        "from": [
          "57 Broad Street, Ny",
          "57 Broad Street - Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Aboard Paquebot \"la Bretagne\"",
          "Aboard Paquebot La Bretagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Bretagne"
      },
      {
        "from": [
          "Bergen, Norway",
          "(bergen, Norway)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bergen, Norway"
      },
      {
        "from": [
          "Minneapolis Club Minneapolis, Mn",
          "Minneapolis Club, Minneapolis, Mn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Minneapolis Club, Minneapolis, Mn"
      },
      {
        "from": [
          "En Route Aboard S.S. Friesland",
          "En Route Aboard Ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Friesland"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Bway & 63rd St. Ny",
          "B'way & 63rd St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bway & 63rd St. Ny"
      },
      {
        "from": [
          "Syracuse Ny",
          "Syracuse, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse, Ny"
      },
      {
        "from": [
          "Adirondacks, Ny",
          "Adirondacks Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adirondacks, Ny"
      },
      {
        "from": [
          "Franconia Notch Nh",
          "Franconia Notch Nh,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franconia Notch Nh"
      },
      {
        "from": [
          "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny",
          "139 Eighth Street, Bet. Broadway And 4th Ave., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 Eighth Street, Bet. Broadway And 4th Ave., New York, Ny"
      },
      {
        "from": [
          "Los Angeles, Ca",
          "Los Angeles, Ca?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Los Angeles, Ca"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Brooklyn Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Naples, Italy",
          "Naples Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Naples, Italy"
      },
      {
        "from": [
          "Krueger Auditorium (newark Nj?)",
          "Krueger Auditorium, Newark, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krueger Auditorium, Newark, Nj"
      },
      {
        "from": [
          "Union League Club, New York, Ny",
          "Union League Club, New York, Ny?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club, New York, Ny"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Ss \"friedrich Der Grosse\"",
          "Ss Friedrich Der Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Friedrich Der Grosse"
      },
      {
        "from": [
          "St. Denis Hotel (new York?)",
          "St. Denis Hotel, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel, New York"
      },
      {
        "from": [
          "Terrace Garden",
          "Terrace Garden,?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Terrace Garden"
      },
      {
        "from": [
          "66th St. & Bway Ny",
          "66th St & B'way, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St & B'way, Ny"
      },
      {
        "from": [
          "Hotel Marlborough, New York, Ny",
          "Marlborough Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough, New York, Ny"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel, New Orleans, La"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans, La"
      },
      {
        "from": [
          "Ellicott Club, Buffalo, Ny",
          "Ellicott Club (buffalo Ny?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club, Buffalo, Ny"
      },
      {
        "from": [
          "Campobello Island",
          "Campobello Island,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Campobello Island"
      },
      {
        "from": [
          "Hotel Bellevue",
          "Bellevue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Hotel"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Hotel Cecil, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Nashville, Tenn",
          "Nashville, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nashville, Tenn"
      },
      {
        "from": [
          "Hotel Willard, Washington, Dc",
          "Willard Hotel, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Willard, Washington, Dc"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "Waldorf Astoria, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Ss Westernland, En Route",
          "Ss Westernland - En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland, En Route"
      },
      {
        "from": [
          "Narragansett Pier,r.I.",
          "Narragansett Pier,ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier, Ri"
      },
      {
        "from": [
          "St. Petersburg (russia?)",
          "St. Petersburg, Russia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Petersburg, Russia"
      },
      {
        "from": [
          "Budapest, Hungary",
          "Budapest, (hungary)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Budapest, Hungary"
      },
      {
        "from": [
          "156 Second Avenue (ny?)",
          "156 Second Avenue, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 Second Avenue, Ny"
      },
      {
        "from": [
          "Taylor's Hotel, Jersey City Nj",
          "Taylor's Hotel, Jersey City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Taylor's Hotel, Jersey City Nj"
      },
      {
        "from": [
          "Whitehall Rooms, The Hotel Metropole, London England",
          "Whitehall Rooms, The Hotel Metropole, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whitehall Rooms, The Hotel Metropole, London, England"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel, Chicago, Il"
      },
      {
        "from": [
          "Park Row Building Ny",
          "Park Row Building, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building, Ny"
      },
      {
        "from": [
          "London,england",
          "London,england ?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "London, England"
      },
      {
        "from": [
          "Delmonico, Ny",
          "Delmonico Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico, Ny"
      },
      {
        "from": [
          "Grand Pacific Hotel",
          "Grand Pacific Hotel,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Delmonico's, New York,ny?",
          "Delmonico's New York,ny",
          "Delmonico's, New York,n.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's New York, Ny"
      },
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, Ny"
      },
      {
        "from": [
          "Chicago, Ill",
          "Chicago ,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "The Arlington, Washington Dc",
          "The Arlington, Washington, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "En Route Aboard Scnelldampfer (express Steamer) Auguste Victoria",
          "En Route Aboard Schnelldampfer (express Steamer) Auguste Victoria",
          "En Route Aboard Schnelldampfer (express Steamer) Auguste-victoria",
          "En Route Aboard Schnelldampmer (express Steamer) Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Scnelldampfer (express Steamer) Auguste Victoria"
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroquois, Buffalo,ny",
          "Hotel Iroquois,buffalo, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Asheville,nc",
          "Asheville, Nc",
          "Ashville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville, Nc"
      },
      {
        "from": [
          "En Route",
          "Rn Route",
          "On Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "Los Angeles,ca",
          "Los Angeles, Ca",
          "Los Angeles, Cal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Los Angeles, Ca"
      },
      {
        "from": [
          "Murray Hill Hotel,ny",
          "Murray Hill Hotel Ny",
          "Murray Hill Hotel Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel Ny"
      },
      {
        "from": [
          "Aboard Paquebot La Lorraine",
          "Aboard Paquebot La Loraine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Lorraine"
      },
      {
        "from": [
          "Hotel Stenton",
          "Hoten Stenton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton"
      },
      {
        "from": [
          "Albany, Ny",
          "Albany,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany, Ny"
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miaami Biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, fla"
      },
      {
        "from": [
          "Springfield,mass.",
          "Springfield, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Springfield, Mass."
      },
      {
        "from": [
          "St.Augustine,fla.",
          "St.Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine, Fla."
      },
      {
        "from": [
          "En Route Aboard Furst Bismarck",
          "En Route Aboard Fust Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Furst Bismarck"
      },
      {
        "from": [
          "Portland,me",
          "Portland,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, me"
      },
      {
        "from": [
          "Luzern, Switzerland",
          "Luzern,switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luzern, Switzerland"
      },
      {
        "from": [
          "Aboard U.S.M.S. St. Louis",
          "Aboard U.S.M.S.St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Toronto, Canada",
          "Toronto,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toronto, Canada"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldorf-astora"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "Waldorf-astoria Hotel, New York, Ny",
          "Waldorf Astoria Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria Hotel, New York, Ny"
      },
      {
        "from": [
          "St. George Hotel",
          "St.George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George Hotel"
      },
      {
        "from": [
          "Hoel Flanders",
          "Hotel Flanders"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Flanders"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Put-in-bay Island, Lake Erie, Oh",
          "Put-in-bay Isand, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay Island, Lake Erie, Oh"
      },
      {
        "from": [
          "Coronada Beach, Ca.",
          "Coronada Beach,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coronada Beach, Ca."
      },
      {
        "from": [
          "New York, Ny",
          "New Yok, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "Niagara Falls, Ny",
          "Niagara Falls,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Niagara Falls, Ny"
      },
      {
        "from": [
          "\"konigin Luise\" At Sea",
          "\"konigin Luse\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigin Luise\" At Sea"
      },
      {
        "from": [
          "Grand Hotel, London, England",
          "Grand Hotel,london, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, London, England"
      },
      {
        "from": [
          "En Route Aboard Dampfer Friedrich Der Grosse",
          "En Route Aboard Dampfer Friedrich Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer Friedrich Der Grosse"
      },
      {
        "from": [
          "St. Denis Hotel",
          "St. Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Postdamfer Graf Waldersee",
          "Postdampfer Graf Waldersee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Postdamfer Graf Waldersee"
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miami,biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, fla"
      },
      {
        "from": [
          "On Board S.S.Amerika",
          "On Board S.S.Amerikas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S.Amerika"
      },
      {
        "from": [
          "Auditorium Hotel",
          "Auditorium Hoel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigen Louise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      },
      {
        "from": [
          "En Route Aboard Ss.Kobe Maru",
          "En Route Aboard Ss.Kohe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss.Kobe Maru"
      },
      {
        "from": [
          "Delmonico's,new York Ny",
          "Delmonico's,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's,new York Ny"
      },
      {
        "from": [
          "St.Augustine,fla.",
          "St.Aaugustine,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine, fla."
      },
      {
        "from": [
          "R.M.S. Rotterdam",
          "R.M.S.Rotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Rotterdam"
      },
      {
        "from": [
          "Enroute Steamer \"auguste Victoria\"",
          "Enroute Syeamer \"auguste Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Enroute Steamer \"auguste Victoria\""
      },
      {
        "from": [
          "Palm Beach, Fl",
          "Palm Beach,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palm Beach, Fl"
      },
      {
        "from": [
          "Havana, Cuba",
          "Havana,cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "Tampa, Florida",
          "Tampa,florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Florida"
      },
      {
        "from": [
          "Rn Route",
          "On Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rn Route"
      },
      {
        "from": [
          "Virginia Beach Va",
          "Virginia Beach,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach Va"
      },
      {
        "from": [
          "Chattanooga, Tn",
          "Chattanooga,tn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tn"
      },
      {
        "from": [
          "St.Denis Hotel Ny",
          "St.Denis Hotel,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Denis Hotel Ny"
      },
      {
        "from": [
          "Asheville, Nc",
          "Ashville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville, Nc"
      },
      {
        "from": [
          "En Route Aboard Dampfer H.H. Meier",
          "En Route Aboard Dampfer H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer H.H. Meier"
      },
      {
        "from": [
          "374 Fifth Avenue, Ny, Ny",
          "374 Fifth Avenue, Ny,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 Fifth Avenue, Ny, Ny"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "American Inn, Portland Or",
          "American Inn, Portland,or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Inn, Portland Or"
      },
      {
        "from": [
          "Hamburg, Germany",
          "Hamburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg, Germany"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome, Itally"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Dampfer \"konigen Luise\"",
          "Dampfer \"konigin Luise\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer \"konigen Luise\""
      },
      {
        "from": [
          "Malone, Ny",
          "Malone,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Ny"
      },
      {
        "from": [
          "Taoemina, Sicily",
          "Taormina, Sicily"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Taormina, Sicily"
      },
      {
        "from": [
          "Baker City, Oregon",
          "Baker City,oregon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker City, Oregon"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Vendome Hotel,ny",
          "Vendome Hotel,nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vendome Hotel, ny"
      },
      {
        "from": [
          "Montreal, Canada",
          "Montreal,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal, Canada"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldof-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Union League, Philadelphia, Pa",
          "Union League, Philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League, Philadelphia, Pa"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago, Ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "Hoboken, Nj",
          "Hoboken,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoboken, Nj"
      },
      {
        "from": [
          "Chicago, Il",
          "Chcago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Fargo, North Dakota",
          "Fargo,north Dakota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, North Dakota"
      },
      {
        "from": [
          "St. Louis, Mo",
          "St.Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Broadway, Ny",
          "Broadway,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway, Ny"
      },
      {
        "from": [
          "Summerville, S.C.",
          "Sommerville, S.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Summerville, S.C."
      },
      {
        "from": [
          "Buckingham Palace, London, England",
          "Buckingham Palace, London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buckingham Palace, London, England"
      },
      {
        "from": [
          "En Route S.S.Vaderland",
          "En Route S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Vaderland"
      },
      {
        "from": [
          "Hotel Walton, Philadelphia,pa",
          "Hotel Walton,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton, Philadelphia, pa"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Hotel Brunswick,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "En Route Aboard S.S. Zealandia",
          "En Route Aboard S.S.Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Zealandia"
      },
      {
        "from": [
          "Watson House, Bablon, L.I., N.Y.",
          "Watson House, Babylon, L.I., N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Watson House, Bablon, L.I., N.Y."
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "117 West 34th Street, New York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York, Ny"
      },
      {
        "from": [
          "St. Charles Hotel,new Orleans, La",
          "St. Charles Hotel,new Orleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel,new Orleans, La"
      },
      {
        "from": [
          "Belmar,nj",
          "Belmar, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Belmar, nj"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans, La",
          "St. Charles Hotel,new Orleans, La"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans, La"
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen,denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "Put-in-bay Island, Oh",
          "Put-in-bay-island, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay Island, Oh"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau,n.P."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "En Route Steamer August Victoria",
          "En Route Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer August Victoria"
      },
      {
        "from": [
          "Malone, Nj",
          "Malone, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Nj"
      },
      {
        "from": [
          "Syracuse, Ny",
          "Syracuse,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse, Ny"
      },
      {
        "from": [
          "Jahreszeiten Eck",
          "Jareszeiten Eck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jahreszeiten Eck"
      },
      {
        "from": [
          "New York",
          "New Yok"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "Atantic Hotel, Ocean City, Md",
          "Atlantic Hotel, Ocean City, Md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atantic Hotel, Ocean City, Md"
      },
      {
        "from": [
          "Dwlmonico's Ny",
          "Dwlmonico's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dwlmonico's Ny"
      },
      {
        "from": [
          "Union Square, Ny",
          "Union Square,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, Ny"
      },
      {
        "from": [
          "New York City, Ny",
          "New York City,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City, Ny"
      },
      {
        "from": [
          "Nassau,bahamas",
          "Nassau, Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, Bahamas"
      },
      {
        "from": [
          "Milan, Italy",
          "Milano, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milan, Italy"
      },
      {
        "from": [
          "Rector's ,ny",
          "Rector's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rector's, Ny"
      },
      {
        "from": [
          "Cincinnati, Ohio",
          "Cincinati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinati, Ohio"
      },
      {
        "from": [
          "Bergen, Norway",
          "Bergen,norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bergen, Norway"
      },
      {
        "from": [
          "Chattanooga, Tn",
          "Chattanooga, Te"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tn"
      },
      {
        "from": [
          "Plymouth, Ma",
          "Plymouth, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plymouth, Mi"
      },
      {
        "from": [
          "Waldorf-Astoria, Ny",
          "Waldorf-astoria,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-Astoria, Ny"
      },
      {
        "from": [
          "Palace Hotel, San Francisco, Ca",
          "Palace Hotel, San Francisco, Cal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, San Francisco, Ca"
      },
      {
        "from": [
          "Park Row, Ny",
          "Park Row, Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row, Ny"
      },
      {
        "from": [
          "Ss: Kamakura Maru",
          "Ss: Kamkura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss: Kamakura Maru"
      },
      {
        "from": [
          "Sixty-sixth Street & Broadway, New York, Ny",
          "Sixty Sixth Street & Broadway, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixty-sixth Street & Broadway, New York, Ny"
      },
      {
        "from": [
          "Altoona, Pa",
          "Altoona,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Altoona, Pa"
      },
      {
        "from": [
          "Helena, Mt",
          "Helena,mt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Helena, Mt"
      },
      {
        "from": [
          "En Route Aboard Ss.K0be Maru",
          "En Route Aboard Ss.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss.K0be Maru"
      },
      {
        "from": [
          "New York City",
          "New York Ciy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City"
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "Metropolitan Hotel",
          "Metopolitan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Hotel"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Hotel Gramercy Park 52 Gamercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "Schnelldampfer Daiser Wilhelm Der Grosse",
          "Schnelldampfer Kaiser Wilhelm Der Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer Daiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Palais Royal, Christiana, Norway",
          "Palais Royal, Christiania, Norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal, Christiana, Norway"
      },
      {
        "from": [
          "Narragansett Pier, Ri",
          "Naragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier, Ri"
      },
      {
        "from": [
          "Frankfurt, Germany",
          "Frankfort, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurt, Germany"
      },
      {
        "from": [
          "Put-in-bay-island, Lake Erie, Oh",
          "Put-in-bay Island, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay-island, Lake Erie, Oh"
      },
      {
        "from": [
          "S.S. Westernland",
          "S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Westernland"
      },
      {
        "from": [
          "Arcanum Hall,elizabeth Nj",
          "Arcanum Hall,elizabeth,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arcanum Hall,elizabeth Nj"
      },
      {
        "from": [
          "Argyle,the, Brooklyn,ny",
          "Argyle,the,brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Argyle,the, Brooklyn, Ny"
      },
      {
        "from": [
          "En Route Aboard Ss.Kohe Maru",
          "En Route Aboard Ss. Kohe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss.Kohe Maru"
      },
      {
        "from": [
          "Hotel Savoy, New York, Ny",
          "Hotel Savoy, Nes York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, New York, Ny"
      },
      {
        "from": [
          "Gelb's Parlors, Providence, Ri",
          "Gelb's Parlors, Providence, Ro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gelb's Parlors, Providence, Ri"
      },
      {
        "from": [
          "Steamship Kaiser Wilhelm Der Grosse",
          "Steamship Kaiser Wilhelm Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miami Biscayne Bay, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fla."
      },
      {
        "from": [
          "En Route Aboard Ss. Kinshin Maru",
          "En Route Aboard Ss.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kinshin Maru"
      },
      {
        "from": [
          "Gibraltar, Spain",
          "Gibralter, Spain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gibraltar, Spain"
      },
      {
        "from": [
          "Linton Hotel",
          "Sinton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Linton Hotel"
      },
      {
        "from": [
          "Buffalo, Ny",
          "Buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "Hotel Walton, Philadelphia Pa",
          "Hotel Walton, Philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton, Philadelphia Pa"
      },
      {
        "from": [
          "Milwaukee, Wi",
          "Milwaukee,wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milwaukee, Wi"
      },
      {
        "from": [
          "St. Augustine, Fl",
          "St. Augustine, Fla"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fl"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss. Kasufa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Sunset Ogden & Shasta Routes",
          "Sunset Ogden & Shasta Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sunset Ogden & Shasta Routes"
      },
      {
        "from": [
          "Augusta, Me",
          "August, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Augusta, Me"
      },
      {
        "from": [
          "Aboard Kronprinzessin Cecilie",
          "Aboard Kronprinsessin Cecilie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Kronprinzessin Cecilie"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver,colo."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "En Route Aboard S.S. Westernland",
          "Enroute Aboard S.S. Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Westernland"
      },
      {
        "from": [
          "Columbus, Ohio",
          "Columbus,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbus, Ohio"
      },
      {
        "from": [
          "Shanley's, Ny",
          "Shanley's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's, Ny"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldof-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "Chattanooga,tenn.",
          "Chattanooga, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tenn."
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroquois, Buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "En Route Aboard S.S.Zeeland",
          "En Route Aboard S.S. Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S.Zeeland"
      },
      {
        "from": [
          "Ss Furst Bismarck",
          "Ss Furst Bismark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Furst Bismarck"
      },
      {
        "from": [
          "Jersey City, Nj",
          "Jersey City, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jersey City, Nj"
      },
      {
        "from": [
          "Diner Car 372, San Francisco Overland Limited",
          "Diner Car 374, San Francisco Overland Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Diner Car 372, San Francisco Overland Limited"
      },
      {
        "from": [
          "Fargo, Nd",
          "Fargo, Nk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, Nd"
      },
      {
        "from": [
          "Munich, Germany",
          "Munich,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Munich, Germany"
      },
      {
        "from": [
          "Waldorf-Astoria, Ny",
          "Waldorf Astoria, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-Astoria, Ny"
      },
      {
        "from": [
          "Steamship North West",
          "Steamship Northwest"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship North West"
      },
      {
        "from": [
          "57 Broad St. Ny",
          "57 Broad St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad St. Ny"
      },
      {
        "from": [
          "Long Beach, Li, Ny",
          "Long Beach,li, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, Li, Ny"
      },
      {
        "from": [
          "Faneuil Hall, Boston, Mass",
          "Faneuil Hall, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Ma"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Petrololis, Brazil",
          "Petropolis, Brazil"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Petrololis, Brazil"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati, 0h"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldorf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Cleveland,ohio",
          "Cleveland, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Ohio"
      },
      {
        "from": [
          "Grand Hotel, Melbourne",
          "Grand Hotel,melbourne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Melbourne"
      },
      {
        "from": [
          "Cincinnati, Ohio",
          "Cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Ohio"
      },
      {
        "from": [
          "Portland, Me",
          "Portland,me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Lake George,ny",
          "Lake George, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lake George, Ny"
      },
      {
        "from": [
          "Havana, Cuba",
          "Habana, Cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "Roanoke, Va",
          "Roanoke,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roanoke, Va"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S.Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "En Route Aboard S.S. Southwark",
          "Enroute Aboard S.S. Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Southwark"
      },
      {
        "from": [
          "Asheville,nc",
          "Asheville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville, Nc"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf- Astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "117west 34th Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York, Ny"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Waldorf-astoria, New York, Ny",
          "Waldorf Astoria, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York, Ny"
      },
      {
        "from": [
          "Philadelphia Bourse",
          "Philadephia Bourse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Bourse"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigin Luise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hotel Walton, Philadelphia Pa",
          "Hotel Walton, Philadelphia, pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton, Philadelphia Pa"
      },
      {
        "from": [
          "Portland, Me",
          "Portland, me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay, fla"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "En Route",
          "Rn Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fla.",
          "Miami Biscayne Bay, fla"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fla."
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans, La",
          "St. Charles Hotel,new Orleans, La"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans, La"
      },
      {
        "from": [
          "Put-in-bay-island, Lake Erie, Oh",
          "Put-in-bay Island, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay-island, Lake Erie, Oh"
      },
      {
        "from": [
          "Malone, Nj",
          "Malone, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Ny"
      },
      {
        "from": [
          "St.Augustine, fla.",
          "St.Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine, Fla."
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago, Ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "Cincinnati, Ohio",
          "Cincinati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Ohio"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigin Luise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression grel:value.replace(/;/,\" \").replace(/[\\[\\]]/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/column-removal",
    "columnName": "name",
    "description": "Remove column name"
  },
  {
    "op": "core/column-removal",
    "columnName": "event",
    "description": "Remove column event"
  },
  {
    "op": "core/column-removal",
    "columnName": "venue",
    "description": "Remove column venue"
  },
  {
    "op": "core/column-removal",
    "columnName": "physical_description",
    "description": "Remove column physical_description"
  },
  {
    "op": "core/column-removal",
    "columnName": "occasion",
    "description": "Remove column occasion"
  },
  {
    "op": "core/column-removal",
    "columnName": "notes",
    "description": "Remove column notes"
  },
  {
    "op": "core/column-removal",
    "columnName": "call_number",
    "description": "Remove column call_number"
  },
  {
    "op": "core/column-removal",
    "columnName": "keywords",
    "description": "Remove column keywords"
  },
  {
    "op": "core/column-removal",
    "columnName": "language",
    "description": "Remove column language"
  },
  {
    "op": "core/column-removal",
    "columnName": "date",
    "description": "Remove column date"
  },
  {
    "op": "core/column-removal",
    "columnName": "location_type",
    "description": "Remove column location_type"
  },
  {
    "op": "core/column-removal",
    "columnName": "currency",
    "description": "Remove column currency"
  },
  {
    "op": "core/column-removal",
    "columnName": "currency_symbol",
    "description": "Remove column currency_symbol"
  },
  {
    "op": "core/column-removal",
    "columnName": "status",
    "description": "Remove column status"
  },
  {
    "op": "core/column-removal",
    "columnName": "page_count",
    "description": "Remove column page_count"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.toNumber()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "sponsor",
    "expression": "grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)",
    "onError": "set-to-blank",
    "newColumnName": "sponsor_NY",
    "columnInsertIndex": 2,
    "description": "Create column sponsor_NY at index 2 based on column sponsor using expression grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "place",
    "expression": "grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)",
    "onError": "set-to-blank",
    "newColumnName": "place_NY",
    "columnInsertIndex": 4,
    "description": "Create column place_NY at index 4 based on column place using expression grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "location",
    "expression": "grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)",
    "onError": "set-to-blank",
    "newColumnName": "location_NY",
    "columnInsertIndex": 6,
    "description": "Create column location_NY at index 6 based on column location using expression grel:value.contains(/\\b(?:New York|Ny|ny)\\b/)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "sponsor_NY",
    "expression": "join ([cells['sponsor_NY'].value,cells['place_NY'].value,cells['location_NY'].value],',')",
    "onError": "keep-original",
    "newColumnName": "if_NY",
    "columnInsertIndex": 3,
    "description": "Create column if_NY at index 3 based on column sponsor_NY using expression join ([cells['sponsor_NY'].value,cells['place_NY'].value,cells['location_NY'].value],',')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "if_NY",
    "expression": "grel:value.contains(/\\b(?:true)\\b/)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column if_NY using expression grel:value.contains(/\\b(?:true)\\b/)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace(/\\?/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression grel:value.replace(/\\?/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "grel:value.replace(/\\?/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression grel:value.replace(/\\?/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "grel:value.replace(/\\?/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression grel:value.replace(/\\?/,\" \")"
  },
  {
    "op": "core/column-removal",
    "columnName": "sponsor_NY",
    "description": "Remove column sponsor_NY"
  },
  {
    "op": "core/column-removal",
    "columnName": "place_NY",
    "description": "Remove column place_NY"
  },
  {
    "op": "core/column-removal",
    "columnName": "location_NY",
    "description": "Remove column location_NY"
  }
]
